;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 29/10/2019 16:15:42
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2B5F      	GOTO       863
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x1683      	BSF        STATUS, 5
0x0008	0x00C5      	MOVWF      ___saveSTATUS
0x0009	0x080A      	MOVF       PCLATH, 0
0x000A	0x00C4      	MOVWF      ___savePCLATH
0x000B	0x018A      	CLRF       PCLATH
0x000C	0x0870      	MOVF       R0, 0
0x000D	0x1283      	BCF        STATUS, 5
0x000E	0x00A1      	MOVWF      33
0x000F	0x087D      	MOVF       R13, 0
0x0010	0x00A0      	MOVWF      32
;Codigo.c,63 :: 		void interrupt ()
;Codigo.c,66 :: 		if (INTF_bit)                            // Testa se houve interrupção externa
0x0011	0x1C8B      	BTFSS      INTF_bit, 1
0x0012	0x2815      	GOTO       L_interrupt0
;Codigo.c,68 :: 		T1CON.F0 = 0x01;                        // Habilita a contagem do TMR1
0x0013	0x1410      	BSF        T1CON, 0
;Codigo.c,69 :: 		INTF_bit = 0x00;                        // Limpa a flag de interrupção externa
0x0014	0x108B      	BCF        INTF_bit, 1
;Codigo.c,71 :: 		} // end INTF if
L_interrupt0:
;Codigo.c,74 :: 		if (TMR1IF_bit)                          // Testa se houve estouro do TMR1
0x0015	0x1C0C      	BTFSS      TMR1IF_bit, 0
0x0016	0x2823      	GOTO       L_interrupt1
;Codigo.c,77 :: 		RA1_bit = 0x01;                          // Gera o pulso em High no pino RA1
0x0017	0x1485      	BSF        RA1_bit, 1
;Codigo.c,78 :: 		delay_us (100);
0x0018	0x30A6      	MOVLW      166
0x0019	0x00FD      	MOVWF      R13
L_interrupt2:
0x001A	0x0BFD      	DECFSZ     R13, 1
0x001B	0x281A      	GOTO       L_interrupt2
0x001C	0x0000      	NOP
;Codigo.c,79 :: 		RA1_bit = 0x00;
0x001D	0x1085      	BCF        RA1_bit, 1
;Codigo.c,81 :: 		TMR1H = 0x63;                            // Recarrega para contagem
0x001E	0x3063      	MOVLW      99
0x001F	0x008F      	MOVWF      TMR1H
;Codigo.c,82 :: 		TMR1L = 0xC0;
0x0020	0x30C0      	MOVLW      192
0x0021	0x008E      	MOVWF      TMR1L
;Codigo.c,85 :: 		TMR1IF_bit = 0x00;                      // Limpa a flag de overflow TMR1
0x0022	0x100C      	BCF        TMR1IF_bit, 0
;Codigo.c,86 :: 		} // end TMR1IF if
L_interrupt1:
;Codigo.c,89 :: 		if (TMR0IF_bit)                          // Testa se houve estouro do timer0
0x0023	0x1D0B      	BTFSS      TMR0IF_bit, 2
0x0024	0x283A      	GOTO       L_interrupt3
;Codigo.c,91 :: 		auxcont0++;                           // Incrementa a variável auxiliar de contagem do TMR0
0x0025	0x0AD5      	INCF       _auxcont0, 1
;Codigo.c,93 :: 		if (auxcont0 == 10)                   // Testa se já se passaram 100ms
0x0026	0x0855      	MOVF       _auxcont0, 0
0x0027	0x3A0A      	XORLW      10
0x0028	0x1D03      	BTFSS      STATUS, 2
0x0029	0x2837      	GOTO       L_interrupt4
;Codigo.c,96 :: 		if (!ENTER)                        // Botão enter pressionado? Sim...
0x002A	0x1986      	BTFSC      RB3_bit, 3
0x002B	0x282F      	GOTO       L_interrupt5
;Codigo.c,98 :: 		RETURN = 0x00;                   // Limpa a flag de retorno do menu
0x002C	0x1683      	BSF        STATUS, 5
0x002D	0x11C3      	BCF        _flagsA, 3
;Codigo.c,99 :: 		GO = 0x01;                       // Seta a flag de entrada do menu
0x002E	0x1543      	BSF        _flagsA, 2
;Codigo.c,100 :: 		} // end if ENTER
L_interrupt5:
;Codigo.c,102 :: 		if (!BACK)                         // Botão se saida pressionado? Sim...
0x002F	0x1283      	BCF        STATUS, 5
0x0030	0x1906      	BTFSC      RB2_bit, 2
0x0031	0x2835      	GOTO       L_interrupt6
;Codigo.c,104 :: 		RETURN = 0x01;
0x0032	0x1683      	BSF        STATUS, 5
0x0033	0x15C3      	BSF        _flagsA, 3
;Codigo.c,105 :: 		GO = 0x00;
0x0034	0x1143      	BCF        _flagsA, 2
;Codigo.c,106 :: 		} // end if BACK
L_interrupt6:
;Codigo.c,108 :: 		auxcont0 = 0x00;                   // Zera a variável de contagem
0x0035	0x1283      	BCF        STATUS, 5
0x0036	0x01D5      	CLRF       _auxcont0
;Codigo.c,110 :: 		} // end auxcount0 if
L_interrupt4:
;Codigo.c,111 :: 		TMR0 = 0x3C;                             // Carrega o timer0 com o valor 60 novamente
0x0037	0x303C      	MOVLW      60
0x0038	0x0081      	MOVWF      TMR0
;Codigo.c,112 :: 		TMR0IF_bit = 0x00;                       // Limpa a flag do timer0 após o fim do processamento da interrupção
0x0039	0x110B      	BCF        TMR0IF_bit, 2
;Codigo.c,113 :: 		} // end TMR0IF if
L_interrupt3:
;Codigo.c,116 :: 		} // end interrupt
L__interrupt59:
0x003A	0x0821      	MOVF       33, 0
0x003B	0x00F0      	MOVWF      R0
0x003C	0x0820      	MOVF       32, 0
0x003D	0x00FD      	MOVWF      R13
0x003E	0x1683      	BSF        STATUS, 5
0x003F	0x0844      	MOVF       ___savePCLATH, 0
0x0040	0x008A      	MOVWF      PCLATH
0x0041	0x0E45      	SWAPF      ___saveSTATUS, 0
0x0042	0x0083      	MOVWF      STATUS
0x0043	0x0EFF      	SWAPF      R15, 1
0x0044	0x0E7F      	SWAPF      R15, 0
0x0045	0x0009      	RETFIE
; end of _interrupt
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x0046	0x0000      	NOP
0x0047	0x0000      	NOP
0x0048	0x0000      	NOP
0x0049	0x0000      	NOP
0x004A	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
0x004B	0x0008      	RETURN
; end of _Delay_1us
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x004C	0x3024      	MOVLW      36
0x004D	0x1283      	BCF        STATUS, 5
0x004E	0x1303      	BCF        STATUS, 6
0x004F	0x00FC      	MOVWF      R12
0x0050	0x30B5      	MOVLW      181
0x0051	0x00FD      	MOVWF      R13
L_Delay_5500us5:
0x0052	0x0BFD      	DECFSZ     R13, 1
0x0053	0x2852      	GOTO       L_Delay_5500us5
0x0054	0x0BFC      	DECFSZ     R12, 1
0x0055	0x2852      	GOTO       L_Delay_5500us5
0x0056	0x0000      	NOP
0x0057	0x0000      	NOP
;__Lib_Delays.c,33 :: 		}
0x0058	0x0008      	RETURN
; end of _Delay_5500us
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x0059	0x3053      	MOVLW      83
0x005A	0x1283      	BCF        STATUS, 5
0x005B	0x1303      	BCF        STATUS, 6
0x005C	0x00FD      	MOVWF      R13
L_Delay_50us2:
0x005D	0x0BFD      	DECFSZ     R13, 1
0x005E	0x285D      	GOTO       L_Delay_50us2
;__Lib_Delays.c,21 :: 		}
0x005F	0x0008      	RETURN
; end of _Delay_50us
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x0060	0x1683      	BSF        STATUS, 5
0x0061	0x1303      	BCF        STATUS, 6
0x0062	0x1BCD      	BTFSC      FARG_Lcd_Cmd_out_char, 7
0x0063	0x2867      	GOTO       L__Lcd_Cmd20
0x0064	0x1283      	BCF        STATUS, 5
0x0065	0x1387      	BCF        LCD_D7, BitPos(LCD_D7+0)
0x0066	0x2869      	GOTO       L__Lcd_Cmd21
L__Lcd_Cmd20:
0x0067	0x1283      	BCF        STATUS, 5
0x0068	0x1787      	BSF        LCD_D7, BitPos(LCD_D7+0)
L__Lcd_Cmd21:
;__Lib_Lcd.c,21 :: 		
0x0069	0x1683      	BSF        STATUS, 5
0x006A	0x1B4D      	BTFSC      FARG_Lcd_Cmd_out_char, 6
0x006B	0x286F      	GOTO       L__Lcd_Cmd22
0x006C	0x1283      	BCF        STATUS, 5
0x006D	0x1307      	BCF        LCD_D6, BitPos(LCD_D6+0)
0x006E	0x2871      	GOTO       L__Lcd_Cmd23
L__Lcd_Cmd22:
0x006F	0x1283      	BCF        STATUS, 5
0x0070	0x1707      	BSF        LCD_D6, BitPos(LCD_D6+0)
L__Lcd_Cmd23:
;__Lib_Lcd.c,22 :: 		
0x0071	0x1683      	BSF        STATUS, 5
0x0072	0x1ACD      	BTFSC      FARG_Lcd_Cmd_out_char, 5
0x0073	0x2877      	GOTO       L__Lcd_Cmd24
0x0074	0x1283      	BCF        STATUS, 5
0x0075	0x1287      	BCF        LCD_D5, BitPos(LCD_D5+0)
0x0076	0x2879      	GOTO       L__Lcd_Cmd25
L__Lcd_Cmd24:
0x0077	0x1283      	BCF        STATUS, 5
0x0078	0x1687      	BSF        LCD_D5, BitPos(LCD_D5+0)
L__Lcd_Cmd25:
;__Lib_Lcd.c,23 :: 		
0x0079	0x1683      	BSF        STATUS, 5
0x007A	0x1A4D      	BTFSC      FARG_Lcd_Cmd_out_char, 4
0x007B	0x287F      	GOTO       L__Lcd_Cmd26
0x007C	0x1283      	BCF        STATUS, 5
0x007D	0x1207      	BCF        LCD_D4, BitPos(LCD_D4+0)
0x007E	0x2881      	GOTO       L__Lcd_Cmd27
L__Lcd_Cmd26:
0x007F	0x1283      	BCF        STATUS, 5
0x0080	0x1607      	BSF        LCD_D4, BitPos(LCD_D4+0)
L__Lcd_Cmd27:
;__Lib_Lcd.c,25 :: 		
0x0081	0x186F      	BTFSC      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x0082	0x2885      	GOTO       L__Lcd_Cmd28
0x0083	0x1507      	BSF        LCD_RS, BitPos(LCD_RS+0)
0x0084	0x2886      	GOTO       L__Lcd_Cmd29
L__Lcd_Cmd28:
0x0085	0x1107      	BCF        LCD_RS, BitPos(LCD_RS+0)
L__Lcd_Cmd29:
;__Lib_Lcd.c,28 :: 		
0x0086	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,29 :: 		
0x0087	0x2046      	CALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x0088	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,33 :: 		
0x0089	0x1683      	BSF        STATUS, 5
0x008A	0x19CD      	BTFSC      FARG_Lcd_Cmd_out_char, 3
0x008B	0x288F      	GOTO       L__Lcd_Cmd30
0x008C	0x1283      	BCF        STATUS, 5
0x008D	0x1387      	BCF        LCD_D7, BitPos(LCD_D7+0)
0x008E	0x2891      	GOTO       L__Lcd_Cmd31
L__Lcd_Cmd30:
0x008F	0x1283      	BCF        STATUS, 5
0x0090	0x1787      	BSF        LCD_D7, BitPos(LCD_D7+0)
L__Lcd_Cmd31:
;__Lib_Lcd.c,34 :: 		
0x0091	0x1683      	BSF        STATUS, 5
0x0092	0x194D      	BTFSC      FARG_Lcd_Cmd_out_char, 2
0x0093	0x2897      	GOTO       L__Lcd_Cmd32
0x0094	0x1283      	BCF        STATUS, 5
0x0095	0x1307      	BCF        LCD_D6, BitPos(LCD_D6+0)
0x0096	0x2899      	GOTO       L__Lcd_Cmd33
L__Lcd_Cmd32:
0x0097	0x1283      	BCF        STATUS, 5
0x0098	0x1707      	BSF        LCD_D6, BitPos(LCD_D6+0)
L__Lcd_Cmd33:
;__Lib_Lcd.c,35 :: 		
0x0099	0x1683      	BSF        STATUS, 5
0x009A	0x18CD      	BTFSC      FARG_Lcd_Cmd_out_char, 1
0x009B	0x289F      	GOTO       L__Lcd_Cmd34
0x009C	0x1283      	BCF        STATUS, 5
0x009D	0x1287      	BCF        LCD_D5, BitPos(LCD_D5+0)
0x009E	0x28A1      	GOTO       L__Lcd_Cmd35
L__Lcd_Cmd34:
0x009F	0x1283      	BCF        STATUS, 5
0x00A0	0x1687      	BSF        LCD_D5, BitPos(LCD_D5+0)
L__Lcd_Cmd35:
;__Lib_Lcd.c,36 :: 		
0x00A1	0x1683      	BSF        STATUS, 5
0x00A2	0x184D      	BTFSC      FARG_Lcd_Cmd_out_char, 0
0x00A3	0x28A7      	GOTO       L__Lcd_Cmd36
0x00A4	0x1283      	BCF        STATUS, 5
0x00A5	0x1207      	BCF        LCD_D4, BitPos(LCD_D4+0)
0x00A6	0x28A9      	GOTO       L__Lcd_Cmd37
L__Lcd_Cmd36:
0x00A7	0x1283      	BCF        STATUS, 5
0x00A8	0x1607      	BSF        LCD_D4, BitPos(LCD_D4+0)
L__Lcd_Cmd37:
;__Lib_Lcd.c,38 :: 		
0x00A9	0x186F      	BTFSC      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x00AA	0x28AD      	GOTO       L__Lcd_Cmd38
0x00AB	0x1507      	BSF        LCD_RS, BitPos(LCD_RS+0)
0x00AC	0x28AE      	GOTO       L__Lcd_Cmd39
L__Lcd_Cmd38:
0x00AD	0x1107      	BCF        LCD_RS, BitPos(LCD_RS+0)
L__Lcd_Cmd39:
;__Lib_Lcd.c,40 :: 		
0x00AE	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,41 :: 		
0x00AF	0x2046      	CALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x00B0	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,44 :: 		
0x00B1	0x1C6F      	BTFSS      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x00B2	0x28B5      	GOTO       L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x00B3	0x204C      	CALL       _Delay_5500us
0x00B4	0x28B6      	GOTO       L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x00B5	0x2059      	CALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
0x00B6	0x0008      	RETURN
; end of _Lcd_Cmd
_Lcd_Chr:
;__Lib_Lcd.c,65 :: 		
;__Lib_Lcd.c,66 :: 		
0x00B7	0x28C9      	GOTO       L_Lcd_Chr4
;__Lib_Lcd.c,67 :: 		
L_Lcd_Chr6:
0x00B8	0x3080      	MOVLW      128
0x00B9	0x1683      	BSF        STATUS, 5
0x00BA	0x1303      	BCF        STATUS, 6
0x00BB	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x00BC	0x28DC      	GOTO       L_Lcd_Chr5
;__Lib_Lcd.c,68 :: 		
L_Lcd_Chr7:
0x00BD	0x30C0      	MOVLW      192
0x00BE	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x00BF	0x28DC      	GOTO       L_Lcd_Chr5
;__Lib_Lcd.c,69 :: 		
L_Lcd_Chr8:
0x00C0	0x3094      	MOVLW      148
0x00C1	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x00C2	0x28DC      	GOTO       L_Lcd_Chr5
;__Lib_Lcd.c,70 :: 		
L_Lcd_Chr9:
0x00C3	0x30D4      	MOVLW      212
0x00C4	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x00C5	0x28DC      	GOTO       L_Lcd_Chr5
;__Lib_Lcd.c,71 :: 		
L_Lcd_Chr10:
0x00C6	0x3080      	MOVLW      128
0x00C7	0x00CA      	MOVWF      FARG_Lcd_Chr_row
;__Lib_Lcd.c,72 :: 		
0x00C8	0x28DC      	GOTO       L_Lcd_Chr5
L_Lcd_Chr4:
0x00C9	0x1683      	BSF        STATUS, 5
0x00CA	0x1303      	BCF        STATUS, 6
0x00CB	0x084A      	MOVF       FARG_Lcd_Chr_row, 0
0x00CC	0x3A01      	XORLW      1
0x00CD	0x1903      	BTFSC      STATUS, 2
0x00CE	0x28B8      	GOTO       L_Lcd_Chr6
0x00CF	0x084A      	MOVF       FARG_Lcd_Chr_row, 0
0x00D0	0x3A02      	XORLW      2
0x00D1	0x1903      	BTFSC      STATUS, 2
0x00D2	0x28BD      	GOTO       L_Lcd_Chr7
0x00D3	0x084A      	MOVF       FARG_Lcd_Chr_row, 0
0x00D4	0x3A03      	XORLW      3
0x00D5	0x1903      	BTFSC      STATUS, 2
0x00D6	0x28C0      	GOTO       L_Lcd_Chr8
0x00D7	0x084A      	MOVF       FARG_Lcd_Chr_row, 0
0x00D8	0x3A04      	XORLW      4
0x00D9	0x1903      	BTFSC      STATUS, 2
0x00DA	0x28C3      	GOTO       L_Lcd_Chr9
0x00DB	0x28C6      	GOTO       L_Lcd_Chr10
L_Lcd_Chr5:
;__Lib_Lcd.c,74 :: 		
0x00DC	0x034B      	DECF       FARG_Lcd_Chr_column, 0
0x00DD	0x00F0      	MOVWF      R0
0x00DE	0x084A      	MOVF       FARG_Lcd_Chr_row, 0
0x00DF	0x07F0      	ADDWF      R0, 1
0x00E0	0x0870      	MOVF       R0, 0
0x00E1	0x00CA      	MOVWF      FARG_Lcd_Chr_row
;__Lib_Lcd.c,76 :: 		
0x00E2	0x1283      	BCF        STATUS, 5
0x00E3	0x146F      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,77 :: 		
0x00E4	0x0870      	MOVF       R0, 0
0x00E5	0x1683      	BSF        STATUS, 5
0x00E6	0x00CD      	MOVWF      FARG_Lcd_Cmd_out_char
0x00E7	0x2060      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,79 :: 		
0x00E8	0x106F      	BCF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,80 :: 		
0x00E9	0x1683      	BSF        STATUS, 5
0x00EA	0x084C      	MOVF       FARG_Lcd_Chr_out_char, 0
0x00EB	0x00CD      	MOVWF      FARG_Lcd_Cmd_out_char
0x00EC	0x2060      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,81 :: 		
0x00ED	0x146F      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,82 :: 		
0x00EE	0x0008      	RETURN
; end of _Lcd_Chr
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x00EF	0x1683      	BSF        STATUS, 5
0x00F0	0x1303      	BCF        STATUS, 6
0x00F1	0x0842      	MOVF       ___DoICPAddr+1, 0
0x00F2	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x00F3	0x0841      	MOVF       ___DoICPAddr, 0
0x00F4	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
0x00F5	0x0008      	RETURN
; end of _____DoICP
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x00F6	0x1283      	BCF        STATUS, 5
0x00F7	0x1303      	BCF        STATUS, 6
0x00F8	0x106F      	BCF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,53 :: 		
0x00F9	0x1683      	BSF        STATUS, 5
0x00FA	0x084A      	MOVF       FARG_Lcd_Chr_CP_out_char, 0
0x00FB	0x00CD      	MOVWF      FARG_Lcd_Cmd_out_char
0x00FC	0x2060      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x00FD	0x146F      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,55 :: 		
0x00FE	0x0008      	RETURN
; end of _Lcd_Chr_CP
_sinc:
;Codigo.c,452 :: 		void sinc ()
;Codigo.c,454 :: 		while (GO && !RETURN)
L_sinc48:
0x00FF	0x1683      	BSF        STATUS, 5
0x0100	0x1303      	BCF        STATUS, 6
0x0101	0x1D43      	BTFSS      _flagsA, 2
0x0102	0x2945      	GOTO       L_sinc49
0x0103	0x19C3      	BTFSC      _flagsA, 3
0x0104	0x2945      	GOTO       L_sinc49
L__sinc58:
;Codigo.c,456 :: 		Lcd_Chr (1,1, ' ');
0x0105	0x3001      	MOVLW      1
0x0106	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x0107	0x3001      	MOVLW      1
0x0108	0x00CB      	MOVWF      FARG_Lcd_Chr_column
0x0109	0x3020      	MOVLW      32
0x010A	0x00CC      	MOVWF      FARG_Lcd_Chr_out_char
0x010B	0x20B7      	CALL       _Lcd_Chr
;Codigo.c,457 :: 		Lcd_Chr (1,16, ' ');
0x010C	0x3001      	MOVLW      1
0x010D	0x1683      	BSF        STATUS, 5
0x010E	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x010F	0x3010      	MOVLW      16
0x0110	0x00CB      	MOVWF      FARG_Lcd_Chr_column
0x0111	0x3020      	MOVLW      32
0x0112	0x00CC      	MOVWF      FARG_Lcd_Chr_out_char
0x0113	0x20B7      	CALL       _Lcd_Chr
;Codigo.c,458 :: 		Lcd_Chr (1,3, 'S');
0x0114	0x3001      	MOVLW      1
0x0115	0x1683      	BSF        STATUS, 5
0x0116	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x0117	0x3003      	MOVLW      3
0x0118	0x00CB      	MOVWF      FARG_Lcd_Chr_column
0x0119	0x3053      	MOVLW      83
0x011A	0x00CC      	MOVWF      FARG_Lcd_Chr_out_char
0x011B	0x20B7      	CALL       _Lcd_Chr
;Codigo.c,459 :: 		Lcd_Chr_Cp ('i');
0x011C	0x3069      	MOVLW      105
0x011D	0x1683      	BSF        STATUS, 5
0x011E	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x011F	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,460 :: 		Lcd_Chr_Cp ('n');
0x0120	0x306E      	MOVLW      110
0x0121	0x1683      	BSF        STATUS, 5
0x0122	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0123	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,461 :: 		Lcd_Chr_Cp ('c');
0x0124	0x3063      	MOVLW      99
0x0125	0x1683      	BSF        STATUS, 5
0x0126	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0127	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,462 :: 		Lcd_Chr_Cp (':');
0x0128	0x303A      	MOVLW      58
0x0129	0x1683      	BSF        STATUS, 5
0x012A	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x012B	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,463 :: 		Lcd_Chr_Cp (' ');
0x012C	0x3020      	MOVLW      32
0x012D	0x1683      	BSF        STATUS, 5
0x012E	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x012F	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,464 :: 		Lcd_Chr_Cp (' ');
0x0130	0x3020      	MOVLW      32
0x0131	0x1683      	BSF        STATUS, 5
0x0132	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0133	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,465 :: 		Lcd_Chr_Cp (' ');
0x0134	0x3020      	MOVLW      32
0x0135	0x1683      	BSF        STATUS, 5
0x0136	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0137	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,466 :: 		Lcd_Chr_Cp (' ');
0x0138	0x3020      	MOVLW      32
0x0139	0x1683      	BSF        STATUS, 5
0x013A	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x013B	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,467 :: 		Lcd_Chr (2,1, '5');
0x013C	0x3002      	MOVLW      2
0x013D	0x1683      	BSF        STATUS, 5
0x013E	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x013F	0x3001      	MOVLW      1
0x0140	0x00CB      	MOVWF      FARG_Lcd_Chr_column
0x0141	0x3035      	MOVLW      53
0x0142	0x00CC      	MOVWF      FARG_Lcd_Chr_out_char
0x0143	0x20B7      	CALL       _Lcd_Chr
;Codigo.c,468 :: 		} // end while
0x0144	0x28FF      	GOTO       L_sinc48
L_sinc49:
;Codigo.c,469 :: 		} // end sinc
0x0145	0x0008      	RETURN
; end of _sinc
_controlight:
;Codigo.c,371 :: 		void controlight ()
;Codigo.c,373 :: 		while (GO && !RETURN   )
L_controlight32:
0x0146	0x1683      	BSF        STATUS, 5
0x0147	0x1303      	BCF        STATUS, 6
0x0148	0x1D43      	BTFSS      _flagsA, 2
0x0149	0x298C      	GOTO       L_controlight33
0x014A	0x19C3      	BTFSC      _flagsA, 3
0x014B	0x298C      	GOTO       L_controlight33
L__controlight54:
;Codigo.c,376 :: 		Lcd_Chr (1,1, ' ');
0x014C	0x3001      	MOVLW      1
0x014D	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x014E	0x3001      	MOVLW      1
0x014F	0x00CB      	MOVWF      FARG_Lcd_Chr_column
0x0150	0x3020      	MOVLW      32
0x0151	0x00CC      	MOVWF      FARG_Lcd_Chr_out_char
0x0152	0x20B7      	CALL       _Lcd_Chr
;Codigo.c,377 :: 		Lcd_Chr (1,16, ' ');
0x0153	0x3001      	MOVLW      1
0x0154	0x1683      	BSF        STATUS, 5
0x0155	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x0156	0x3010      	MOVLW      16
0x0157	0x00CB      	MOVWF      FARG_Lcd_Chr_column
0x0158	0x3020      	MOVLW      32
0x0159	0x00CC      	MOVWF      FARG_Lcd_Chr_out_char
0x015A	0x20B7      	CALL       _Lcd_Chr
;Codigo.c,378 :: 		Lcd_Chr (1,3, 'C');
0x015B	0x3001      	MOVLW      1
0x015C	0x1683      	BSF        STATUS, 5
0x015D	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x015E	0x3003      	MOVLW      3
0x015F	0x00CB      	MOVWF      FARG_Lcd_Chr_column
0x0160	0x3043      	MOVLW      67
0x0161	0x00CC      	MOVWF      FARG_Lcd_Chr_out_char
0x0162	0x20B7      	CALL       _Lcd_Chr
;Codigo.c,379 :: 		Lcd_Chr_Cp ('o');
0x0163	0x306F      	MOVLW      111
0x0164	0x1683      	BSF        STATUS, 5
0x0165	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0166	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,380 :: 		Lcd_Chr_Cp ('n');
0x0167	0x306E      	MOVLW      110
0x0168	0x1683      	BSF        STATUS, 5
0x0169	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x016A	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,381 :: 		Lcd_Chr_Cp ('t');
0x016B	0x3074      	MOVLW      116
0x016C	0x1683      	BSF        STATUS, 5
0x016D	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x016E	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,382 :: 		Lcd_Chr_Cp ('r');
0x016F	0x3072      	MOVLW      114
0x0170	0x1683      	BSF        STATUS, 5
0x0171	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0172	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,383 :: 		Lcd_Chr_Cp ('o');
0x0173	0x306F      	MOVLW      111
0x0174	0x1683      	BSF        STATUS, 5
0x0175	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0176	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,384 :: 		Lcd_Chr_Cp ('l');
0x0177	0x306C      	MOVLW      108
0x0178	0x1683      	BSF        STATUS, 5
0x0179	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x017A	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,385 :: 		Lcd_Chr_Cp ('e');
0x017B	0x3065      	MOVLW      101
0x017C	0x1683      	BSF        STATUS, 5
0x017D	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x017E	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,386 :: 		Lcd_Chr_Cp (':');
0x017F	0x303A      	MOVLW      58
0x0180	0x1683      	BSF        STATUS, 5
0x0181	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0182	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,387 :: 		Lcd_Chr (2,1, '1');
0x0183	0x3002      	MOVLW      2
0x0184	0x1683      	BSF        STATUS, 5
0x0185	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x0186	0x3001      	MOVLW      1
0x0187	0x00CB      	MOVWF      FARG_Lcd_Chr_column
0x0188	0x3031      	MOVLW      49
0x0189	0x00CC      	MOVWF      FARG_Lcd_Chr_out_char
0x018A	0x20B7      	CALL       _Lcd_Chr
;Codigo.c,388 :: 		} // end while
0x018B	0x2946      	GOTO       L_controlight32
L_controlight33:
;Codigo.c,389 :: 		} // end controlight
0x018C	0x0008      	RETURN
; end of _controlight
_timer:
;Codigo.c,432 :: 		void timer ()
;Codigo.c,434 :: 		while (GO && !RETURN)
L_timer44:
0x018D	0x1683      	BSF        STATUS, 5
0x018E	0x1303      	BCF        STATUS, 6
0x018F	0x1D43      	BTFSS      _flagsA, 2
0x0190	0x29D7      	GOTO       L_timer45
0x0191	0x19C3      	BTFSC      _flagsA, 3
0x0192	0x29D7      	GOTO       L_timer45
L__timer57:
;Codigo.c,436 :: 		Lcd_Chr (1,1, ' ');
0x0193	0x3001      	MOVLW      1
0x0194	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x0195	0x3001      	MOVLW      1
0x0196	0x00CB      	MOVWF      FARG_Lcd_Chr_column
0x0197	0x3020      	MOVLW      32
0x0198	0x00CC      	MOVWF      FARG_Lcd_Chr_out_char
0x0199	0x20B7      	CALL       _Lcd_Chr
;Codigo.c,437 :: 		Lcd_Chr (1,16, ' ');
0x019A	0x3001      	MOVLW      1
0x019B	0x1683      	BSF        STATUS, 5
0x019C	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x019D	0x3010      	MOVLW      16
0x019E	0x00CB      	MOVWF      FARG_Lcd_Chr_column
0x019F	0x3020      	MOVLW      32
0x01A0	0x00CC      	MOVWF      FARG_Lcd_Chr_out_char
0x01A1	0x20B7      	CALL       _Lcd_Chr
;Codigo.c,438 :: 		Lcd_Chr (1,3, 'T');
0x01A2	0x3001      	MOVLW      1
0x01A3	0x1683      	BSF        STATUS, 5
0x01A4	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x01A5	0x3003      	MOVLW      3
0x01A6	0x00CB      	MOVWF      FARG_Lcd_Chr_column
0x01A7	0x3054      	MOVLW      84
0x01A8	0x00CC      	MOVWF      FARG_Lcd_Chr_out_char
0x01A9	0x20B7      	CALL       _Lcd_Chr
;Codigo.c,439 :: 		Lcd_Chr_Cp ('i');
0x01AA	0x3069      	MOVLW      105
0x01AB	0x1683      	BSF        STATUS, 5
0x01AC	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x01AD	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,440 :: 		Lcd_Chr_Cp ('m');
0x01AE	0x306D      	MOVLW      109
0x01AF	0x1683      	BSF        STATUS, 5
0x01B0	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x01B1	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,441 :: 		Lcd_Chr_Cp ('e');
0x01B2	0x3065      	MOVLW      101
0x01B3	0x1683      	BSF        STATUS, 5
0x01B4	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x01B5	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,442 :: 		Lcd_Chr_Cp ('r');
0x01B6	0x3072      	MOVLW      114
0x01B7	0x1683      	BSF        STATUS, 5
0x01B8	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x01B9	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,443 :: 		Lcd_Chr_Cp (':');
0x01BA	0x303A      	MOVLW      58
0x01BB	0x1683      	BSF        STATUS, 5
0x01BC	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x01BD	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,444 :: 		Lcd_Chr_Cp (' ');
0x01BE	0x3020      	MOVLW      32
0x01BF	0x1683      	BSF        STATUS, 5
0x01C0	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x01C1	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,445 :: 		Lcd_Chr_Cp (' ');
0x01C2	0x3020      	MOVLW      32
0x01C3	0x1683      	BSF        STATUS, 5
0x01C4	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x01C5	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,446 :: 		Lcd_Chr_Cp (' ');
0x01C6	0x3020      	MOVLW      32
0x01C7	0x1683      	BSF        STATUS, 5
0x01C8	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x01C9	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,447 :: 		Lcd_Chr_Cp (' ');
0x01CA	0x3020      	MOVLW      32
0x01CB	0x1683      	BSF        STATUS, 5
0x01CC	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x01CD	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,448 :: 		Lcd_Chr (2,1, '4');
0x01CE	0x3002      	MOVLW      2
0x01CF	0x1683      	BSF        STATUS, 5
0x01D0	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x01D1	0x3001      	MOVLW      1
0x01D2	0x00CB      	MOVWF      FARG_Lcd_Chr_column
0x01D3	0x3034      	MOVLW      52
0x01D4	0x00CC      	MOVWF      FARG_Lcd_Chr_out_char
0x01D5	0x20B7      	CALL       _Lcd_Chr
;Codigo.c,449 :: 		} // end while
0x01D6	0x298D      	GOTO       L_timer44
L_timer45:
;Codigo.c,450 :: 		} // end timer
0x01D7	0x0008      	RETURN
; end of _timer
_fade:
;Codigo.c,391 :: 		void fade ()
;Codigo.c,393 :: 		while (GO && !RETURN)
L_fade36:
0x01D8	0x1683      	BSF        STATUS, 5
0x01D9	0x1303      	BCF        STATUS, 6
0x01DA	0x1D43      	BTFSS      _flagsA, 2
0x01DB	0x2A1E      	GOTO       L_fade37
0x01DC	0x19C3      	BTFSC      _flagsA, 3
0x01DD	0x2A1E      	GOTO       L_fade37
L__fade55:
;Codigo.c,396 :: 		Lcd_Chr (1,1, ' ');
0x01DE	0x3001      	MOVLW      1
0x01DF	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x01E0	0x3001      	MOVLW      1
0x01E1	0x00CB      	MOVWF      FARG_Lcd_Chr_column
0x01E2	0x3020      	MOVLW      32
0x01E3	0x00CC      	MOVWF      FARG_Lcd_Chr_out_char
0x01E4	0x20B7      	CALL       _Lcd_Chr
;Codigo.c,397 :: 		Lcd_Chr (1,16, ' ');
0x01E5	0x3001      	MOVLW      1
0x01E6	0x1683      	BSF        STATUS, 5
0x01E7	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x01E8	0x3010      	MOVLW      16
0x01E9	0x00CB      	MOVWF      FARG_Lcd_Chr_column
0x01EA	0x3020      	MOVLW      32
0x01EB	0x00CC      	MOVWF      FARG_Lcd_Chr_out_char
0x01EC	0x20B7      	CALL       _Lcd_Chr
;Codigo.c,398 :: 		Lcd_Chr (1,3, 'F');
0x01ED	0x3001      	MOVLW      1
0x01EE	0x1683      	BSF        STATUS, 5
0x01EF	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x01F0	0x3003      	MOVLW      3
0x01F1	0x00CB      	MOVWF      FARG_Lcd_Chr_column
0x01F2	0x3046      	MOVLW      70
0x01F3	0x00CC      	MOVWF      FARG_Lcd_Chr_out_char
0x01F4	0x20B7      	CALL       _Lcd_Chr
;Codigo.c,399 :: 		Lcd_Chr_Cp ('a');
0x01F5	0x3061      	MOVLW      97
0x01F6	0x1683      	BSF        STATUS, 5
0x01F7	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x01F8	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,400 :: 		Lcd_Chr_Cp ('d');
0x01F9	0x3064      	MOVLW      100
0x01FA	0x1683      	BSF        STATUS, 5
0x01FB	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x01FC	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,401 :: 		Lcd_Chr_Cp ('e');
0x01FD	0x3065      	MOVLW      101
0x01FE	0x1683      	BSF        STATUS, 5
0x01FF	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0200	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,402 :: 		Lcd_Chr_Cp (':');
0x0201	0x303A      	MOVLW      58
0x0202	0x1683      	BSF        STATUS, 5
0x0203	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0204	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,403 :: 		Lcd_Chr_Cp (' ');
0x0205	0x3020      	MOVLW      32
0x0206	0x1683      	BSF        STATUS, 5
0x0207	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0208	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,404 :: 		Lcd_Chr_Cp (' ');
0x0209	0x3020      	MOVLW      32
0x020A	0x1683      	BSF        STATUS, 5
0x020B	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x020C	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,405 :: 		Lcd_Chr_Cp (' ');
0x020D	0x3020      	MOVLW      32
0x020E	0x1683      	BSF        STATUS, 5
0x020F	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0210	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,406 :: 		Lcd_Chr_Cp (' ');
0x0211	0x3020      	MOVLW      32
0x0212	0x1683      	BSF        STATUS, 5
0x0213	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0214	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,407 :: 		Lcd_Chr (2,1, '2');
0x0215	0x3002      	MOVLW      2
0x0216	0x1683      	BSF        STATUS, 5
0x0217	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x0218	0x3001      	MOVLW      1
0x0219	0x00CB      	MOVWF      FARG_Lcd_Chr_column
0x021A	0x3032      	MOVLW      50
0x021B	0x00CC      	MOVWF      FARG_Lcd_Chr_out_char
0x021C	0x20B7      	CALL       _Lcd_Chr
;Codigo.c,408 :: 		} // end while
0x021D	0x29D8      	GOTO       L_fade36
L_fade37:
;Codigo.c,409 :: 		} // end fade
0x021E	0x0008      	RETURN
; end of _fade
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x021F	0x2A31      	GOTO       L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x0220	0x3080      	MOVLW      128
0x0221	0x1683      	BSF        STATUS, 5
0x0222	0x1303      	BCF        STATUS, 6
0x0223	0x00C6      	MOVWF      FARG_Lcd_Out_row
0x0224	0x2A44      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x0225	0x30C0      	MOVLW      192
0x0226	0x00C6      	MOVWF      FARG_Lcd_Out_row
0x0227	0x2A44      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x0228	0x3094      	MOVLW      148
0x0229	0x00C6      	MOVWF      FARG_Lcd_Out_row
0x022A	0x2A44      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x022B	0x30D4      	MOVLW      212
0x022C	0x00C6      	MOVWF      FARG_Lcd_Out_row
0x022D	0x2A44      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x022E	0x3080      	MOVLW      128
0x022F	0x00C6      	MOVWF      FARG_Lcd_Out_row
;__Lib_Lcd.c,193 :: 		
0x0230	0x2A44      	GOTO       L_Lcd_Out12
L_Lcd_Out11:
0x0231	0x1683      	BSF        STATUS, 5
0x0232	0x1303      	BCF        STATUS, 6
0x0233	0x0846      	MOVF       FARG_Lcd_Out_row, 0
0x0234	0x3A01      	XORLW      1
0x0235	0x1903      	BTFSC      STATUS, 2
0x0236	0x2A20      	GOTO       L_Lcd_Out13
0x0237	0x0846      	MOVF       FARG_Lcd_Out_row, 0
0x0238	0x3A02      	XORLW      2
0x0239	0x1903      	BTFSC      STATUS, 2
0x023A	0x2A25      	GOTO       L_Lcd_Out14
0x023B	0x0846      	MOVF       FARG_Lcd_Out_row, 0
0x023C	0x3A03      	XORLW      3
0x023D	0x1903      	BTFSC      STATUS, 2
0x023E	0x2A28      	GOTO       L_Lcd_Out15
0x023F	0x0846      	MOVF       FARG_Lcd_Out_row, 0
0x0240	0x3A04      	XORLW      4
0x0241	0x1903      	BTFSC      STATUS, 2
0x0242	0x2A2B      	GOTO       L_Lcd_Out16
0x0243	0x2A2E      	GOTO       L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x0244	0x0347      	DECF       FARG_Lcd_Out_column, 0
0x0245	0x00F0      	MOVWF      R0
0x0246	0x0846      	MOVF       FARG_Lcd_Out_row, 0
0x0247	0x07F0      	ADDWF      R0, 1
0x0248	0x0870      	MOVF       R0, 0
0x0249	0x00C6      	MOVWF      FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x024A	0x0870      	MOVF       R0, 0
0x024B	0x00CD      	MOVWF      FARG_Lcd_Cmd_out_char
0x024C	0x2060      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,197 :: 		
0x024D	0x106F      	BCF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,198 :: 		
0x024E	0x1683      	BSF        STATUS, 5
0x024F	0x01C9      	CLRF       Lcd_Out_i_L0
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x0250	0x0849      	MOVF       Lcd_Out_i_L0, 0
0x0251	0x0748      	ADDWF      FARG_Lcd_Out_text, 0
0x0252	0x0084      	MOVWF      FSR
0x0253	0x0800      	MOVF       INDF, 0
0x0254	0x1903      	BTFSC      STATUS, 2
0x0255	0x2A5F      	GOTO       L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x0256	0x0849      	MOVF       Lcd_Out_i_L0, 0
0x0257	0x0748      	ADDWF      FARG_Lcd_Out_text, 0
0x0258	0x0084      	MOVWF      FSR
0x0259	0x0800      	MOVF       INDF, 0
0x025A	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x025B	0x20F6      	CALL       _Lcd_Chr_CP
0x025C	0x1683      	BSF        STATUS, 5
0x025D	0x0AC9      	INCF       Lcd_Out_i_L0, 1
0x025E	0x2A50      	GOTO       L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x025F	0x1283      	BCF        STATUS, 5
0x0260	0x146F      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,202 :: 		
0x0261	0x0008      	RETURN
; end of _Lcd_Out
_testabotoes:
;Codigo.c,347 :: 		void testabotoes ()
;Codigo.c,349 :: 		if (!butinc)        inc = 0x01;     // Se botão de mais pressionado, seta a flag inc
0x0262	0x1283      	BCF        STATUS, 5
0x0263	0x1303      	BCF        STATUS, 6
0x0264	0x1B86      	BTFSC      RB7_bit, 7
0x0265	0x2A68      	GOTO       L_testabotoes22
0x0266	0x1683      	BSF        STATUS, 5
0x0267	0x1443      	BSF        _flagsA, 0
L_testabotoes22:
;Codigo.c,350 :: 		if (!butdec)        dec = 0x01;     // Se botão de menos pressionado, seta a flag dec
0x0268	0x1283      	BCF        STATUS, 5
0x0269	0x1B06      	BTFSC      RB6_bit, 6
0x026A	0x2A6D      	GOTO       L_testabotoes23
0x026B	0x1683      	BSF        STATUS, 5
0x026C	0x14C3      	BSF        _flagsA, 1
L_testabotoes23:
;Codigo.c,352 :: 		if (butinc && inc)                  // Botão+ solto e flag inc setada? Sim...
0x026D	0x1283      	BCF        STATUS, 5
0x026E	0x1F86      	BTFSS      RB7_bit, 7
0x026F	0x2A78      	GOTO       L_testabotoes26
0x0270	0x1683      	BSF        STATUS, 5
0x0271	0x1C43      	BTFSS      _flagsA, 0
0x0272	0x2A78      	GOTO       L_testabotoes26
L__testabotoes53:
;Codigo.c,354 :: 		inc = 0x00;                 // Limpa a flag
0x0273	0x1043      	BCF        _flagsA, 0
;Codigo.c,355 :: 		sel++;                      // Incrementa a seleção de menus
0x0274	0x1283      	BCF        STATUS, 5
0x0275	0x0AE7      	INCF       _sel, 1
;Codigo.c,356 :: 		ClearLCD = 0x01;
0x0276	0x1683      	BSF        STATUS, 5
0x0277	0x1643      	BSF        _flagsA, 4
;Codigo.c,357 :: 		} // end but+ && inc
L_testabotoes26:
;Codigo.c,359 :: 		if (butdec && dec)                  // Botão- solto e flag dec setada? Sim...
0x0278	0x1283      	BCF        STATUS, 5
0x0279	0x1F06      	BTFSS      RB6_bit, 6
0x027A	0x2A83      	GOTO       L_testabotoes29
0x027B	0x1683      	BSF        STATUS, 5
0x027C	0x1CC3      	BTFSS      _flagsA, 1
0x027D	0x2A83      	GOTO       L_testabotoes29
L__testabotoes52:
;Codigo.c,361 :: 		dec = 0x00;                 // Limpa a flag
0x027E	0x10C3      	BCF        _flagsA, 1
;Codigo.c,362 :: 		sel--;                      // Decrementa a seleção de menus
0x027F	0x1283      	BCF        STATUS, 5
0x0280	0x03E7      	DECF       _sel, 1
;Codigo.c,363 :: 		ClearLCD = 0x01;
0x0281	0x1683      	BSF        STATUS, 5
0x0282	0x1643      	BSF        _flagsA, 4
;Codigo.c,364 :: 		} // end if but- && dec
L_testabotoes29:
;Codigo.c,366 :: 		if (sel > nmenus)        sel = 0x01;
0x0283	0x1283      	BCF        STATUS, 5
0x0284	0x0867      	MOVF       _sel, 0
0x0285	0x3C05      	SUBLW      5
0x0286	0x1803      	BTFSC      STATUS, 0
0x0287	0x2A8A      	GOTO       L_testabotoes30
0x0288	0x3001      	MOVLW      1
0x0289	0x00E7      	MOVWF      _sel
L_testabotoes30:
;Codigo.c,367 :: 		if (sel < 0x01)          sel = nmenus;
0x028A	0x3001      	MOVLW      1
0x028B	0x0267      	SUBWF      _sel, 0
0x028C	0x1803      	BTFSC      STATUS, 0
0x028D	0x2A90      	GOTO       L_testabotoes31
0x028E	0x3005      	MOVLW      5
0x028F	0x00E7      	MOVWF      _sel
L_testabotoes31:
;Codigo.c,369 :: 		} // end testabotoes
0x0290	0x0008      	RETURN
; end of _testabotoes
_flash:
;Codigo.c,411 :: 		void flash ()
;Codigo.c,413 :: 		while (GO && !RETURN)
L_flash40:
0x0291	0x1683      	BSF        STATUS, 5
0x0292	0x1303      	BCF        STATUS, 6
0x0293	0x1D43      	BTFSS      _flagsA, 2
0x0294	0x2ADB      	GOTO       L_flash41
0x0295	0x19C3      	BTFSC      _flagsA, 3
0x0296	0x2ADB      	GOTO       L_flash41
L__flash56:
;Codigo.c,416 :: 		Lcd_Chr (1,1, ' ');
0x0297	0x3001      	MOVLW      1
0x0298	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x0299	0x3001      	MOVLW      1
0x029A	0x00CB      	MOVWF      FARG_Lcd_Chr_column
0x029B	0x3020      	MOVLW      32
0x029C	0x00CC      	MOVWF      FARG_Lcd_Chr_out_char
0x029D	0x20B7      	CALL       _Lcd_Chr
;Codigo.c,417 :: 		Lcd_Chr (1,16, ' ');
0x029E	0x3001      	MOVLW      1
0x029F	0x1683      	BSF        STATUS, 5
0x02A0	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x02A1	0x3010      	MOVLW      16
0x02A2	0x00CB      	MOVWF      FARG_Lcd_Chr_column
0x02A3	0x3020      	MOVLW      32
0x02A4	0x00CC      	MOVWF      FARG_Lcd_Chr_out_char
0x02A5	0x20B7      	CALL       _Lcd_Chr
;Codigo.c,418 :: 		Lcd_Chr (1,3, 'F');
0x02A6	0x3001      	MOVLW      1
0x02A7	0x1683      	BSF        STATUS, 5
0x02A8	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x02A9	0x3003      	MOVLW      3
0x02AA	0x00CB      	MOVWF      FARG_Lcd_Chr_column
0x02AB	0x3046      	MOVLW      70
0x02AC	0x00CC      	MOVWF      FARG_Lcd_Chr_out_char
0x02AD	0x20B7      	CALL       _Lcd_Chr
;Codigo.c,419 :: 		Lcd_Chr_Cp ('l');
0x02AE	0x306C      	MOVLW      108
0x02AF	0x1683      	BSF        STATUS, 5
0x02B0	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x02B1	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,420 :: 		Lcd_Chr_Cp ('a');
0x02B2	0x3061      	MOVLW      97
0x02B3	0x1683      	BSF        STATUS, 5
0x02B4	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x02B5	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,421 :: 		Lcd_Chr_Cp ('s');
0x02B6	0x3073      	MOVLW      115
0x02B7	0x1683      	BSF        STATUS, 5
0x02B8	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x02B9	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,422 :: 		Lcd_Chr_Cp ('h');
0x02BA	0x3068      	MOVLW      104
0x02BB	0x1683      	BSF        STATUS, 5
0x02BC	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x02BD	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,423 :: 		Lcd_Chr_Cp (':');
0x02BE	0x303A      	MOVLW      58
0x02BF	0x1683      	BSF        STATUS, 5
0x02C0	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x02C1	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,424 :: 		Lcd_Chr_Cp (' ');
0x02C2	0x3020      	MOVLW      32
0x02C3	0x1683      	BSF        STATUS, 5
0x02C4	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x02C5	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,425 :: 		Lcd_Chr_Cp (' ');
0x02C6	0x3020      	MOVLW      32
0x02C7	0x1683      	BSF        STATUS, 5
0x02C8	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x02C9	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,426 :: 		Lcd_Chr_Cp (' ');
0x02CA	0x3020      	MOVLW      32
0x02CB	0x1683      	BSF        STATUS, 5
0x02CC	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x02CD	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,427 :: 		Lcd_Chr_Cp (' ');
0x02CE	0x3020      	MOVLW      32
0x02CF	0x1683      	BSF        STATUS, 5
0x02D0	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x02D1	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,428 :: 		Lcd_Chr (2,1, '3');
0x02D2	0x3002      	MOVLW      2
0x02D3	0x1683      	BSF        STATUS, 5
0x02D4	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x02D5	0x3001      	MOVLW      1
0x02D6	0x00CB      	MOVWF      FARG_Lcd_Chr_column
0x02D7	0x3033      	MOVLW      51
0x02D8	0x00CC      	MOVWF      FARG_Lcd_Chr_out_char
0x02D9	0x20B7      	CALL       _Lcd_Chr
;Codigo.c,429 :: 		} // end while
0x02DA	0x2A91      	GOTO       L_flash40
L_flash41:
;Codigo.c,430 :: 		} // end flash
0x02DB	0x0008      	RETURN
; end of _flash
___CC2DW:
;__Lib_System.c,24 :: 		
;__Lib_System.c,27 :: 		
_CC2D_Loop1:
;__Lib_System.c,29 :: 		
0x02DC	0x20EF      	CALL       _____DoICP
0x02DD	0x118A      	BCF        PCLATH, 3
0x02DE	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,31 :: 		
0x02DF	0x0080      	MOVWF      INDF
;__Lib_System.c,32 :: 		
0x02E0	0x0A84      	INCF       FSR, 1
;__Lib_System.c,33 :: 		
0x02E1	0x0AC1      	INCF       ___DoICPAddr, 1
;__Lib_System.c,35 :: 		
0x02E2	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,36 :: 		
0x02E3	0x0AC2      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,37 :: 		
0x02E4	0x03F0      	DECF       R0, 1
;__Lib_System.c,39 :: 		
0x02E5	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,40 :: 		
0x02E6	0x2ADC      	GOTO       _CC2D_Loop1
;__Lib_System.c,42 :: 		
0x02E7	0x0008      	RETURN
; end of ___CC2DW
_registradores:
;Codigo.c,284 :: 		void registradores ()
;Codigo.c,288 :: 		INTCON = 0xF0;     // 1111 0000
0x02E8	0x30F0      	MOVLW      240
0x02E9	0x008B      	MOVWF      INTCON
;Codigo.c,298 :: 		OPTION_REG = 0x87; // 1000 0111
0x02EA	0x3087      	MOVLW      135
0x02EB	0x1683      	BSF        STATUS, 5
0x02EC	0x1303      	BCF        STATUS, 6
0x02ED	0x0081      	MOVWF      OPTION_REG
;Codigo.c,306 :: 		T1CON = 0x00;      // 0000 0000
0x02EE	0x1283      	BCF        STATUS, 5
0x02EF	0x0190      	CLRF       T1CON
;Codigo.c,314 :: 		PIE1 = PIE1 | 0x01;// 0000 0001
0x02F0	0x1683      	BSF        STATUS, 5
0x02F1	0x140C      	BSF        PIE1, 0
;Codigo.c,317 :: 		PIR1 = PIR1 & 0xFE;// 1111 1110
0x02F2	0x30FE      	MOVLW      254
0x02F3	0x1283      	BCF        STATUS, 5
0x02F4	0x058C      	ANDWF      PIR1, 1
;Codigo.c,320 :: 		TMR1H = 0x63;      // Configura o TMR1 para contagem do periodo desligado
0x02F5	0x3063      	MOVLW      99
0x02F6	0x008F      	MOVWF      TMR1H
;Codigo.c,321 :: 		TMR1L = 0xC0;
0x02F7	0x30C0      	MOVLW      192
0x02F8	0x008E      	MOVWF      TMR1L
;Codigo.c,324 :: 		CMCON = 0x07;      // Desabilita os comparadores
0x02F9	0x3007      	MOVLW      7
0x02FA	0x1683      	BSF        STATUS, 5
0x02FB	0x009C      	MOVWF      CMCON
;Codigo.c,325 :: 		CVREN_bit = 0;
0x02FC	0x139D      	BCF        CVREN_bit, 7
;Codigo.c,326 :: 		CVROE_bit = 0;
0x02FD	0x131D      	BCF        CVROE_bit, 6
;Codigo.c,328 :: 		TMR0 = 0x3C;       // Carrega o timer0 com o valor 60 inicialmente
0x02FE	0x303C      	MOVLW      60
0x02FF	0x1283      	BCF        STATUS, 5
0x0300	0x0081      	MOVWF      TMR0
;Codigo.c,330 :: 		ADON_bit = 0x00;   // Desabilita o modulo de conversão AD
0x0301	0x101F      	BCF        ADON_bit, 0
;Codigo.c,331 :: 		ADCON1 = 0x0F;     // Configura os pinos do PORTA como digitais
0x0302	0x300F      	MOVLW      15
0x0303	0x1683      	BSF        STATUS, 5
0x0304	0x009F      	MOVWF      ADCON1
;Codigo.c,333 :: 		TRISA = 0b11111101;
0x0305	0x30FD      	MOVLW      253
0x0306	0x0085      	MOVWF      TRISA
;Codigo.c,334 :: 		TRISB = 0b11111101;
0x0307	0x30FD      	MOVLW      253
0x0308	0x0086      	MOVWF      TRISB
;Codigo.c,335 :: 		TRISC = 0xF0;      // 1111 0000
0x0309	0x30F0      	MOVLW      240
0x030A	0x0087      	MOVWF      TRISC
;Codigo.c,338 :: 		PORTA = 0x00;      // Inicia o PORTB em LOW
0x030B	0x1283      	BCF        STATUS, 5
0x030C	0x0185      	CLRF       PORTA
;Codigo.c,339 :: 		PORTB = 0xFF;      // Inicia o PORTB em HIGH
0x030D	0x30FF      	MOVLW      255
0x030E	0x0086      	MOVWF      PORTB
;Codigo.c,340 :: 		PORTC = 0x00;      // Inicia o PORTC em LOW
0x030F	0x0187      	CLRF       PORTC
;Codigo.c,345 :: 		} // end registradores
0x0310	0x0008      	RETURN
; end of _registradores
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x0311	0x1683      	BSF        STATUS, 5
0x0312	0x1303      	BCF        STATUS, 6
0x0313	0x1187      	BCF        LCD_EN_Direction, BitPos(LCD_EN_Direction+0)
;__Lib_Lcd.c,87 :: 		
0x0314	0x1107      	BCF        LCD_RS_Direction, BitPos(LCD_RS_Direction+0)
;__Lib_Lcd.c,88 :: 		
0x0315	0x1207      	BCF        LCD_D4_Direction, BitPos(LCD_D4_Direction+0)
;__Lib_Lcd.c,89 :: 		
0x0316	0x1287      	BCF        LCD_D5_Direction, BitPos(LCD_D5_Direction+0)
;__Lib_Lcd.c,90 :: 		
0x0317	0x1307      	BCF        LCD_D6_Direction, BitPos(LCD_D6_Direction+0)
;__Lib_Lcd.c,91 :: 		
0x0318	0x1387      	BCF        LCD_D7_Direction, BitPos(LCD_D7_Direction+0)
;__Lib_Lcd.c,93 :: 		
0x0319	0x1283      	BCF        STATUS, 5
0x031A	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,94 :: 		
0x031B	0x1107      	BCF        LCD_RS, BitPos(LCD_RS+0)
;__Lib_Lcd.c,95 :: 		
0x031C	0x1387      	BCF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,96 :: 		
0x031D	0x1307      	BCF        LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,97 :: 		
0x031E	0x1287      	BCF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,98 :: 		
0x031F	0x1207      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,100 :: 		
0x0320	0x204C      	CALL       _Delay_5500us
;__Lib_Lcd.c,101 :: 		
0x0321	0x204C      	CALL       _Delay_5500us
;__Lib_Lcd.c,102 :: 		
0x0322	0x204C      	CALL       _Delay_5500us
;__Lib_Lcd.c,105 :: 		
0x0323	0x1687      	BSF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,106 :: 		
0x0324	0x1607      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,107 :: 		
0x0325	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,108 :: 		
0x0326	0x2046      	CALL       _Delay_1us
;__Lib_Lcd.c,109 :: 		
0x0327	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,110 :: 		
0x0328	0x204C      	CALL       _Delay_5500us
;__Lib_Lcd.c,112 :: 		
0x0329	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,113 :: 		
0x032A	0x2046      	CALL       _Delay_1us
;__Lib_Lcd.c,114 :: 		
0x032B	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,115 :: 		
0x032C	0x204C      	CALL       _Delay_5500us
;__Lib_Lcd.c,117 :: 		
0x032D	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,118 :: 		
0x032E	0x2046      	CALL       _Delay_1us
;__Lib_Lcd.c,119 :: 		
0x032F	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,120 :: 		
0x0330	0x204C      	CALL       _Delay_5500us
;__Lib_Lcd.c,123 :: 		
0x0331	0x1207      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,124 :: 		
0x0332	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,125 :: 		
0x0333	0x2046      	CALL       _Delay_1us
;__Lib_Lcd.c,126 :: 		
0x0334	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,127 :: 		
0x0335	0x204C      	CALL       _Delay_5500us
;__Lib_Lcd.c,130 :: 		
0x0336	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,131 :: 		
0x0337	0x2046      	CALL       _Delay_1us
;__Lib_Lcd.c,132 :: 		
0x0338	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,134 :: 		
0x0339	0x1287      	BCF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,135 :: 		
0x033A	0x1787      	BSF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,136 :: 		
0x033B	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,137 :: 		
0x033C	0x2046      	CALL       _Delay_1us
;__Lib_Lcd.c,138 :: 		
0x033D	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,139 :: 		
0x033E	0x204C      	CALL       _Delay_5500us
;__Lib_Lcd.c,142 :: 		
0x033F	0x1387      	BCF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,143 :: 		
0x0340	0x1607      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,144 :: 		
0x0341	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,145 :: 		
0x0342	0x2046      	CALL       _Delay_1us
;__Lib_Lcd.c,146 :: 		
0x0343	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,148 :: 		
0x0344	0x1207      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,149 :: 		
0x0345	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,150 :: 		
0x0346	0x2046      	CALL       _Delay_1us
;__Lib_Lcd.c,151 :: 		
0x0347	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,152 :: 		
0x0348	0x204C      	CALL       _Delay_5500us
;__Lib_Lcd.c,155 :: 		
0x0349	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,156 :: 		
0x034A	0x2046      	CALL       _Delay_1us
;__Lib_Lcd.c,157 :: 		
0x034B	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,159 :: 		
0x034C	0x1607      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,160 :: 		
0x034D	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,161 :: 		
0x034E	0x2046      	CALL       _Delay_1us
;__Lib_Lcd.c,162 :: 		
0x034F	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,163 :: 		
0x0350	0x204C      	CALL       _Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x0351	0x1207      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,167 :: 		
0x0352	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,168 :: 		
0x0353	0x2046      	CALL       _Delay_1us
;__Lib_Lcd.c,169 :: 		
0x0354	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,171 :: 		
0x0355	0x1787      	BSF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,172 :: 		
0x0356	0x1707      	BSF        LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,173 :: 		
0x0357	0x1687      	BSF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,174 :: 		
0x0358	0x1607      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,175 :: 		
0x0359	0x1587      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,176 :: 		
0x035A	0x2046      	CALL       _Delay_1us
;__Lib_Lcd.c,177 :: 		
0x035B	0x1187      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,179 :: 		
0x035C	0x204C      	CALL       _Delay_5500us
;__Lib_Lcd.c,181 :: 		
0x035D	0x146F      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,182 :: 		
0x035E	0x0008      	RETURN
; end of _Lcd_Init
_main:
0x035F	0x2544      	CALL       1348
;Codigo.c,130 :: 		void main()
;Codigo.c,132 :: 		GO       = 0x00;                         // Inicializa todas as flags limpas...
0x0360	0x1683      	BSF        STATUS, 5
0x0361	0x1303      	BCF        STATUS, 6
0x0362	0x1143      	BCF        _flagsA, 2
;Codigo.c,133 :: 		RETURN   = 0x00;
0x0363	0x11C3      	BCF        _flagsA, 3
;Codigo.c,134 :: 		inc      = 0x00;
0x0364	0x1043      	BCF        _flagsA, 0
;Codigo.c,135 :: 		dec      = 0x00;
0x0365	0x10C3      	BCF        _flagsA, 1
;Codigo.c,136 :: 		ClearLCD = 0x00;
0x0366	0x1243      	BCF        _flagsA, 4
;Codigo.c,138 :: 		registradores ();                        // Faz chamada da função que configura os registradores
0x0367	0x22E8      	CALL       _registradores
;Codigo.c,140 :: 		Lcd_Init();                              // Inicia o display LCD
0x0368	0x2311      	CALL       _Lcd_Init
;Codigo.c,141 :: 		Lcd_Cmd (_LCD_CLEAR);                    // Limpa o display LCD
0x0369	0x3001      	MOVLW      1
0x036A	0x1683      	BSF        STATUS, 5
0x036B	0x00CD      	MOVWF      FARG_Lcd_Cmd_out_char
0x036C	0x2060      	CALL       _Lcd_Cmd
;Codigo.c,142 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);                // Desliga o cursor do display LCD
0x036D	0x300C      	MOVLW      12
0x036E	0x1683      	BSF        STATUS, 5
0x036F	0x00CD      	MOVWF      FARG_Lcd_Cmd_out_char
0x0370	0x2060      	CALL       _Lcd_Cmd
;Codigo.c,143 :: 		Lcd_Out (1, 6,"Dimmer");                 // Imprime mensagem de inicialização no display LCD
0x0371	0x3001      	MOVLW      1
0x0372	0x1683      	BSF        STATUS, 5
0x0373	0x00C6      	MOVWF      FARG_Lcd_Out_row
0x0374	0x3006      	MOVLW      6
0x0375	0x00C7      	MOVWF      FARG_Lcd_Out_column
0x0376	0x3068      	MOVLW      ?lstr1_Codigo
0x0377	0x00C8      	MOVWF      FARG_Lcd_Out_text
0x0378	0x221F      	CALL       _Lcd_Out
;Codigo.c,144 :: 		Lcd_Out (2, 2,"Microcontrolado");        // (Mensagem generica)
0x0379	0x3002      	MOVLW      2
0x037A	0x1683      	BSF        STATUS, 5
0x037B	0x00C6      	MOVWF      FARG_Lcd_Out_row
0x037C	0x3002      	MOVLW      2
0x037D	0x00C7      	MOVWF      FARG_Lcd_Out_column
0x037E	0x30B1      	MOVLW      ?lstr2_Codigo
0x037F	0x00C8      	MOVWF      FARG_Lcd_Out_text
0x0380	0x221F      	CALL       _Lcd_Out
;Codigo.c,146 :: 		delay_ms (1000);                         // Aguarda 1 segundo com a mensagem na tela
0x0381	0x301A      	MOVLW      26
0x0382	0x00FB      	MOVWF      R11
0x0383	0x305E      	MOVLW      94
0x0384	0x00FC      	MOVWF      R12
0x0385	0x306E      	MOVLW      110
0x0386	0x00FD      	MOVWF      R13
L_main7:
0x0387	0x0BFD      	DECFSZ     R13, 1
0x0388	0x2B87      	GOTO       L_main7
0x0389	0x0BFC      	DECFSZ     R12, 1
0x038A	0x2B87      	GOTO       L_main7
0x038B	0x0BFB      	DECFSZ     R11, 1
0x038C	0x2B87      	GOTO       L_main7
0x038D	0x0000      	NOP
;Codigo.c,147 :: 		Lcd_Cmd (_LCD_CLEAR);
0x038E	0x3001      	MOVLW      1
0x038F	0x1683      	BSF        STATUS, 5
0x0390	0x00CD      	MOVWF      FARG_Lcd_Cmd_out_char
0x0391	0x2060      	CALL       _Lcd_Cmd
;Codigo.c,149 :: 		while (1)
L_main8:
;Codigo.c,151 :: 		testabotoes();                        // Chama a função que testa os botões de incremento e decremento
0x0392	0x2262      	CALL       _testabotoes
;Codigo.c,153 :: 		switch (sel)                          // Entra no menu de funcionalidades do dimmer
0x0393	0x2CB9      	GOTO       L_main10
;Codigo.c,155 :: 		case 0x01:
L_main12:
;Codigo.c,157 :: 		if (ClearLCD)
0x0394	0x1683      	BSF        STATUS, 5
0x0395	0x1E43      	BTFSS      _flagsA, 4
0x0396	0x2B9C      	GOTO       L_main13
;Codigo.c,159 :: 		LCD_Cmd (_LCD_CLEAR);
0x0397	0x3001      	MOVLW      1
0x0398	0x00CD      	MOVWF      FARG_Lcd_Cmd_out_char
0x0399	0x2060      	CALL       _Lcd_Cmd
;Codigo.c,160 :: 		ClearLCD = 0x00;
0x039A	0x1683      	BSF        STATUS, 5
0x039B	0x1243      	BCF        _flagsA, 4
;Codigo.c,161 :: 		} // end if Clear LCD
L_main13:
;Codigo.c,163 :: 		Lcd_Chr (1,1, '<');
0x039C	0x3001      	MOVLW      1
0x039D	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x039E	0x3001      	MOVLW      1
0x039F	0x00CB      	MOVWF      FARG_Lcd_Chr_column
0x03A0	0x303C      	MOVLW      60
0x03A1	0x00CC      	MOVWF      FARG_Lcd_Chr_out_char
0x03A2	0x20B7      	CALL       _Lcd_Chr
;Codigo.c,164 :: 		Lcd_Chr (1,16, '>');
0x03A3	0x3001      	MOVLW      1
0x03A4	0x1683      	BSF        STATUS, 5
0x03A5	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x03A6	0x3010      	MOVLW      16
0x03A7	0x00CB      	MOVWF      FARG_Lcd_Chr_column
0x03A8	0x303E      	MOVLW      62
0x03A9	0x00CC      	MOVWF      FARG_Lcd_Chr_out_char
0x03AA	0x20B7      	CALL       _Lcd_Chr
;Codigo.c,165 :: 		Lcd_Chr (1,3, 'C');
0x03AB	0x3001      	MOVLW      1
0x03AC	0x1683      	BSF        STATUS, 5
0x03AD	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x03AE	0x3003      	MOVLW      3
0x03AF	0x00CB      	MOVWF      FARG_Lcd_Chr_column
0x03B0	0x3043      	MOVLW      67
0x03B1	0x00CC      	MOVWF      FARG_Lcd_Chr_out_char
0x03B2	0x20B7      	CALL       _Lcd_Chr
;Codigo.c,166 :: 		Lcd_Chr_Cp ('o');
0x03B3	0x306F      	MOVLW      111
0x03B4	0x1683      	BSF        STATUS, 5
0x03B5	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x03B6	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,167 :: 		Lcd_Chr_Cp ('n');
0x03B7	0x306E      	MOVLW      110
0x03B8	0x1683      	BSF        STATUS, 5
0x03B9	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x03BA	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,168 :: 		Lcd_Chr_Cp ('t');
0x03BB	0x3074      	MOVLW      116
0x03BC	0x1683      	BSF        STATUS, 5
0x03BD	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x03BE	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,169 :: 		Lcd_Chr_Cp ('r');
0x03BF	0x3072      	MOVLW      114
0x03C0	0x1683      	BSF        STATUS, 5
0x03C1	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x03C2	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,170 :: 		Lcd_Chr_Cp ('o');
0x03C3	0x306F      	MOVLW      111
0x03C4	0x1683      	BSF        STATUS, 5
0x03C5	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x03C6	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,171 :: 		Lcd_Chr_Cp ('l');
0x03C7	0x306C      	MOVLW      108
0x03C8	0x1683      	BSF        STATUS, 5
0x03C9	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x03CA	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,172 :: 		Lcd_Chr_Cp ('e');
0x03CB	0x3065      	MOVLW      101
0x03CC	0x1683      	BSF        STATUS, 5
0x03CD	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x03CE	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,174 :: 		Lcd_Out (2,1, "                ");
0x03CF	0x3002      	MOVLW      2
0x03D0	0x1683      	BSF        STATUS, 5
0x03D1	0x00C6      	MOVWF      FARG_Lcd_Out_row
0x03D2	0x3001      	MOVLW      1
0x03D3	0x00C7      	MOVWF      FARG_Lcd_Out_column
0x03D4	0x30A0      	MOVLW      ?lstr3_Codigo
0x03D5	0x00C8      	MOVWF      FARG_Lcd_Out_text
0x03D6	0x221F      	CALL       _Lcd_Out
;Codigo.c,176 :: 		controlight ();
0x03D7	0x2146      	CALL       _controlight
;Codigo.c,177 :: 		break;
0x03D8	0x2CCF      	GOTO       L_main11
;Codigo.c,179 :: 		case 0x02:
L_main14:
;Codigo.c,181 :: 		if (ClearLCD)
0x03D9	0x1683      	BSF        STATUS, 5
0x03DA	0x1303      	BCF        STATUS, 6
0x03DB	0x1E43      	BTFSS      _flagsA, 4
0x03DC	0x2BE2      	GOTO       L_main15
;Codigo.c,183 :: 		LCD_Cmd (_LCD_CLEAR);
0x03DD	0x3001      	MOVLW      1
0x03DE	0x00CD      	MOVWF      FARG_Lcd_Cmd_out_char
0x03DF	0x2060      	CALL       _Lcd_Cmd
;Codigo.c,184 :: 		ClearLCD = 0x00;
0x03E0	0x1683      	BSF        STATUS, 5
0x03E1	0x1243      	BCF        _flagsA, 4
;Codigo.c,185 :: 		} // end if Clear LCD
L_main15:
;Codigo.c,187 :: 		Lcd_Chr (1,1, '<');
0x03E2	0x3001      	MOVLW      1
0x03E3	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x03E4	0x3001      	MOVLW      1
0x03E5	0x00CB      	MOVWF      FARG_Lcd_Chr_column
0x03E6	0x303C      	MOVLW      60
0x03E7	0x00CC      	MOVWF      FARG_Lcd_Chr_out_char
0x03E8	0x20B7      	CALL       _Lcd_Chr
;Codigo.c,188 :: 		Lcd_Chr (1,16, '>');
0x03E9	0x3001      	MOVLW      1
0x03EA	0x1683      	BSF        STATUS, 5
0x03EB	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x03EC	0x3010      	MOVLW      16
0x03ED	0x00CB      	MOVWF      FARG_Lcd_Chr_column
0x03EE	0x303E      	MOVLW      62
0x03EF	0x00CC      	MOVWF      FARG_Lcd_Chr_out_char
0x03F0	0x20B7      	CALL       _Lcd_Chr
;Codigo.c,189 :: 		Lcd_Chr (1,3, 'F');
0x03F1	0x3001      	MOVLW      1
0x03F2	0x1683      	BSF        STATUS, 5
0x03F3	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x03F4	0x3003      	MOVLW      3
0x03F5	0x00CB      	MOVWF      FARG_Lcd_Chr_column
0x03F6	0x3046      	MOVLW      70
0x03F7	0x00CC      	MOVWF      FARG_Lcd_Chr_out_char
0x03F8	0x20B7      	CALL       _Lcd_Chr
;Codigo.c,190 :: 		Lcd_Chr_Cp ('a');
0x03F9	0x3061      	MOVLW      97
0x03FA	0x1683      	BSF        STATUS, 5
0x03FB	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x03FC	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,191 :: 		Lcd_Chr_Cp ('d');
0x03FD	0x3064      	MOVLW      100
0x03FE	0x1683      	BSF        STATUS, 5
0x03FF	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0400	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,192 :: 		Lcd_Chr_Cp ('e');
0x0401	0x3065      	MOVLW      101
0x0402	0x1683      	BSF        STATUS, 5
0x0403	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0404	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,198 :: 		Lcd_Out (2,1, "                ");
0x0405	0x3002      	MOVLW      2
0x0406	0x1683      	BSF        STATUS, 5
0x0407	0x00C6      	MOVWF      FARG_Lcd_Out_row
0x0408	0x3001      	MOVLW      1
0x0409	0x00C7      	MOVWF      FARG_Lcd_Out_column
0x040A	0x3056      	MOVLW      ?lstr4_Codigo
0x040B	0x00C8      	MOVWF      FARG_Lcd_Out_text
0x040C	0x221F      	CALL       _Lcd_Out
;Codigo.c,200 :: 		fade ();
0x040D	0x21D8      	CALL       _fade
;Codigo.c,201 :: 		break;
0x040E	0x2CCF      	GOTO       L_main11
;Codigo.c,203 :: 		case 0x03:
L_main16:
;Codigo.c,205 :: 		if (ClearLCD)
0x040F	0x1683      	BSF        STATUS, 5
0x0410	0x1303      	BCF        STATUS, 6
0x0411	0x1E43      	BTFSS      _flagsA, 4
0x0412	0x2C18      	GOTO       L_main17
;Codigo.c,207 :: 		LCD_Cmd (_LCD_CLEAR);
0x0413	0x3001      	MOVLW      1
0x0414	0x00CD      	MOVWF      FARG_Lcd_Cmd_out_char
0x0415	0x2060      	CALL       _Lcd_Cmd
;Codigo.c,208 :: 		ClearLCD = 0x00;
0x0416	0x1683      	BSF        STATUS, 5
0x0417	0x1243      	BCF        _flagsA, 4
;Codigo.c,209 :: 		} // end if Clear LCD
L_main17:
;Codigo.c,211 :: 		Lcd_Chr (1,1, '<');
0x0418	0x3001      	MOVLW      1
0x0419	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x041A	0x3001      	MOVLW      1
0x041B	0x00CB      	MOVWF      FARG_Lcd_Chr_column
0x041C	0x303C      	MOVLW      60
0x041D	0x00CC      	MOVWF      FARG_Lcd_Chr_out_char
0x041E	0x20B7      	CALL       _Lcd_Chr
;Codigo.c,212 :: 		Lcd_Chr (1,16, '>');
0x041F	0x3001      	MOVLW      1
0x0420	0x1683      	BSF        STATUS, 5
0x0421	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x0422	0x3010      	MOVLW      16
0x0423	0x00CB      	MOVWF      FARG_Lcd_Chr_column
0x0424	0x303E      	MOVLW      62
0x0425	0x00CC      	MOVWF      FARG_Lcd_Chr_out_char
0x0426	0x20B7      	CALL       _Lcd_Chr
;Codigo.c,213 :: 		Lcd_Chr (1,3, 'F');
0x0427	0x3001      	MOVLW      1
0x0428	0x1683      	BSF        STATUS, 5
0x0429	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x042A	0x3003      	MOVLW      3
0x042B	0x00CB      	MOVWF      FARG_Lcd_Chr_column
0x042C	0x3046      	MOVLW      70
0x042D	0x00CC      	MOVWF      FARG_Lcd_Chr_out_char
0x042E	0x20B7      	CALL       _Lcd_Chr
;Codigo.c,214 :: 		Lcd_Chr_Cp ('l');
0x042F	0x306C      	MOVLW      108
0x0430	0x1683      	BSF        STATUS, 5
0x0431	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0432	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,215 :: 		Lcd_Chr_Cp ('a');
0x0433	0x3061      	MOVLW      97
0x0434	0x1683      	BSF        STATUS, 5
0x0435	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0436	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,216 :: 		Lcd_Chr_Cp ('s');
0x0437	0x3073      	MOVLW      115
0x0438	0x1683      	BSF        STATUS, 5
0x0439	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x043A	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,217 :: 		Lcd_Chr_Cp ('h');
0x043B	0x3068      	MOVLW      104
0x043C	0x1683      	BSF        STATUS, 5
0x043D	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x043E	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,223 :: 		Lcd_Out (2,1, "                ");
0x043F	0x3002      	MOVLW      2
0x0440	0x1683      	BSF        STATUS, 5
0x0441	0x00C6      	MOVWF      FARG_Lcd_Out_row
0x0442	0x3001      	MOVLW      1
0x0443	0x00C7      	MOVWF      FARG_Lcd_Out_column
0x0444	0x3033      	MOVLW      ?lstr5_Codigo
0x0445	0x00C8      	MOVWF      FARG_Lcd_Out_text
0x0446	0x221F      	CALL       _Lcd_Out
;Codigo.c,225 :: 		flash ();
0x0447	0x2291      	CALL       _flash
;Codigo.c,226 :: 		break;
0x0448	0x2CCF      	GOTO       L_main11
;Codigo.c,228 :: 		case 0x04:
L_main18:
;Codigo.c,230 :: 		if (ClearLCD)
0x0449	0x1683      	BSF        STATUS, 5
0x044A	0x1303      	BCF        STATUS, 6
0x044B	0x1E43      	BTFSS      _flagsA, 4
0x044C	0x2C52      	GOTO       L_main19
;Codigo.c,232 :: 		LCD_Cmd (_LCD_CLEAR);
0x044D	0x3001      	MOVLW      1
0x044E	0x00CD      	MOVWF      FARG_Lcd_Cmd_out_char
0x044F	0x2060      	CALL       _Lcd_Cmd
;Codigo.c,233 :: 		ClearLCD = 0x00;
0x0450	0x1683      	BSF        STATUS, 5
0x0451	0x1243      	BCF        _flagsA, 4
;Codigo.c,234 :: 		} // end if Clear LCD
L_main19:
;Codigo.c,236 :: 		Lcd_Chr (1,1, '<');
0x0452	0x3001      	MOVLW      1
0x0453	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x0454	0x3001      	MOVLW      1
0x0455	0x00CB      	MOVWF      FARG_Lcd_Chr_column
0x0456	0x303C      	MOVLW      60
0x0457	0x00CC      	MOVWF      FARG_Lcd_Chr_out_char
0x0458	0x20B7      	CALL       _Lcd_Chr
;Codigo.c,237 :: 		Lcd_Chr (1,16, '>');
0x0459	0x3001      	MOVLW      1
0x045A	0x1683      	BSF        STATUS, 5
0x045B	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x045C	0x3010      	MOVLW      16
0x045D	0x00CB      	MOVWF      FARG_Lcd_Chr_column
0x045E	0x303E      	MOVLW      62
0x045F	0x00CC      	MOVWF      FARG_Lcd_Chr_out_char
0x0460	0x20B7      	CALL       _Lcd_Chr
;Codigo.c,238 :: 		Lcd_Chr (1,3, 'T');
0x0461	0x3001      	MOVLW      1
0x0462	0x1683      	BSF        STATUS, 5
0x0463	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x0464	0x3003      	MOVLW      3
0x0465	0x00CB      	MOVWF      FARG_Lcd_Chr_column
0x0466	0x3054      	MOVLW      84
0x0467	0x00CC      	MOVWF      FARG_Lcd_Chr_out_char
0x0468	0x20B7      	CALL       _Lcd_Chr
;Codigo.c,239 :: 		Lcd_Chr_Cp ('i');
0x0469	0x3069      	MOVLW      105
0x046A	0x1683      	BSF        STATUS, 5
0x046B	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x046C	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,240 :: 		Lcd_Chr_Cp ('m');
0x046D	0x306D      	MOVLW      109
0x046E	0x1683      	BSF        STATUS, 5
0x046F	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0470	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,241 :: 		Lcd_Chr_Cp ('e');
0x0471	0x3065      	MOVLW      101
0x0472	0x1683      	BSF        STATUS, 5
0x0473	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0474	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,242 :: 		Lcd_Chr_Cp ('r');
0x0475	0x3072      	MOVLW      114
0x0476	0x1683      	BSF        STATUS, 5
0x0477	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0478	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,248 :: 		Lcd_Out (2,1, "                ");
0x0479	0x3002      	MOVLW      2
0x047A	0x1683      	BSF        STATUS, 5
0x047B	0x00C6      	MOVWF      FARG_Lcd_Out_row
0x047C	0x3001      	MOVLW      1
0x047D	0x00C7      	MOVWF      FARG_Lcd_Out_column
0x047E	0x3022      	MOVLW      ?lstr6_Codigo
0x047F	0x00C8      	MOVWF      FARG_Lcd_Out_text
0x0480	0x221F      	CALL       _Lcd_Out
;Codigo.c,250 :: 		timer ();
0x0481	0x218D      	CALL       _timer
;Codigo.c,251 :: 		break;
0x0482	0x2CCF      	GOTO       L_main11
;Codigo.c,253 :: 		case 0x05:
L_main20:
;Codigo.c,255 :: 		if (ClearLCD)
0x0483	0x1683      	BSF        STATUS, 5
0x0484	0x1303      	BCF        STATUS, 6
0x0485	0x1E43      	BTFSS      _flagsA, 4
0x0486	0x2C8C      	GOTO       L_main21
;Codigo.c,257 :: 		LCD_Cmd (_LCD_CLEAR);
0x0487	0x3001      	MOVLW      1
0x0488	0x00CD      	MOVWF      FARG_Lcd_Cmd_out_char
0x0489	0x2060      	CALL       _Lcd_Cmd
;Codigo.c,258 :: 		ClearLCD = 0x00;
0x048A	0x1683      	BSF        STATUS, 5
0x048B	0x1243      	BCF        _flagsA, 4
;Codigo.c,259 :: 		} // end if Clear LCD
L_main21:
;Codigo.c,261 :: 		Lcd_Chr (1,1, '<');
0x048C	0x3001      	MOVLW      1
0x048D	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x048E	0x3001      	MOVLW      1
0x048F	0x00CB      	MOVWF      FARG_Lcd_Chr_column
0x0490	0x303C      	MOVLW      60
0x0491	0x00CC      	MOVWF      FARG_Lcd_Chr_out_char
0x0492	0x20B7      	CALL       _Lcd_Chr
;Codigo.c,262 :: 		Lcd_Chr (1,16, '>');
0x0493	0x3001      	MOVLW      1
0x0494	0x1683      	BSF        STATUS, 5
0x0495	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x0496	0x3010      	MOVLW      16
0x0497	0x00CB      	MOVWF      FARG_Lcd_Chr_column
0x0498	0x303E      	MOVLW      62
0x0499	0x00CC      	MOVWF      FARG_Lcd_Chr_out_char
0x049A	0x20B7      	CALL       _Lcd_Chr
;Codigo.c,263 :: 		Lcd_Chr (1,3, 'S');
0x049B	0x3001      	MOVLW      1
0x049C	0x1683      	BSF        STATUS, 5
0x049D	0x00CA      	MOVWF      FARG_Lcd_Chr_row
0x049E	0x3003      	MOVLW      3
0x049F	0x00CB      	MOVWF      FARG_Lcd_Chr_column
0x04A0	0x3053      	MOVLW      83
0x04A1	0x00CC      	MOVWF      FARG_Lcd_Chr_out_char
0x04A2	0x20B7      	CALL       _Lcd_Chr
;Codigo.c,264 :: 		Lcd_Chr_Cp ('i');
0x04A3	0x3069      	MOVLW      105
0x04A4	0x1683      	BSF        STATUS, 5
0x04A5	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x04A6	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,265 :: 		Lcd_Chr_Cp ('n');
0x04A7	0x306E      	MOVLW      110
0x04A8	0x1683      	BSF        STATUS, 5
0x04A9	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x04AA	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,266 :: 		Lcd_Chr_Cp ('c');
0x04AB	0x3063      	MOVLW      99
0x04AC	0x1683      	BSF        STATUS, 5
0x04AD	0x00CA      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x04AE	0x20F6      	CALL       _Lcd_Chr_CP
;Codigo.c,272 :: 		Lcd_Out (2,1, "                ");
0x04AF	0x3002      	MOVLW      2
0x04B0	0x1683      	BSF        STATUS, 5
0x04B1	0x00C6      	MOVWF      FARG_Lcd_Out_row
0x04B2	0x3001      	MOVLW      1
0x04B3	0x00C7      	MOVWF      FARG_Lcd_Out_column
0x04B4	0x3044      	MOVLW      ?lstr7_Codigo
0x04B5	0x00C8      	MOVWF      FARG_Lcd_Out_text
0x04B6	0x221F      	CALL       _Lcd_Out
;Codigo.c,274 :: 		sinc ();
0x04B7	0x20FF      	CALL       _sinc
;Codigo.c,275 :: 		break;
0x04B8	0x2CCF      	GOTO       L_main11
;Codigo.c,277 :: 		} // end switch case sel
L_main10:
0x04B9	0x1283      	BCF        STATUS, 5
0x04BA	0x1303      	BCF        STATUS, 6
0x04BB	0x0867      	MOVF       _sel, 0
0x04BC	0x3A01      	XORLW      1
0x04BD	0x1903      	BTFSC      STATUS, 2
0x04BE	0x2B94      	GOTO       L_main12
0x04BF	0x0867      	MOVF       _sel, 0
0x04C0	0x3A02      	XORLW      2
0x04C1	0x1903      	BTFSC      STATUS, 2
0x04C2	0x2BD9      	GOTO       L_main14
0x04C3	0x0867      	MOVF       _sel, 0
0x04C4	0x3A03      	XORLW      3
0x04C5	0x1903      	BTFSC      STATUS, 2
0x04C6	0x2C0F      	GOTO       L_main16
0x04C7	0x0867      	MOVF       _sel, 0
0x04C8	0x3A04      	XORLW      4
0x04C9	0x1903      	BTFSC      STATUS, 2
0x04CA	0x2C49      	GOTO       L_main18
0x04CB	0x0867      	MOVF       _sel, 0
0x04CC	0x3A05      	XORLW      5
0x04CD	0x1903      	BTFSC      STATUS, 2
0x04CE	0x2C83      	GOTO       L_main20
L_main11:
;Codigo.c,279 :: 		} // end while
0x04CF	0x2B92      	GOTO       L_main8
;Codigo.c,280 :: 		} // end main
0x04D0	0x2CD0      	GOTO       $+0
; end of _main
0x0544	0x3022      	MOVLW      34
0x0545	0x0084      	MOVWF      FSR
0x0546	0x304D      	MOVLW      77
0x0547	0x1283      	BCF        STATUS, 5
0x0548	0x1303      	BCF        STATUS, 6
0x0549	0x00F0      	MOVWF      R0
0x054A	0x30D6      	MOVLW      214
0x054B	0x1683      	BSF        STATUS, 5
0x054C	0x00C1      	MOVWF      ___DoICPAddr
0x054D	0x3004      	MOVLW      4
0x054E	0x00C2      	MOVWF      194
0x054F	0x22DC      	CALL       732
0x0550	0x30A0      	MOVLW      160
0x0551	0x0084      	MOVWF      FSR
0x0552	0x3021      	MOVLW      33
0x0553	0x00F0      	MOVWF      R0
0x0554	0x3023      	MOVLW      35
0x0555	0x1683      	BSF        STATUS, 5
0x0556	0x00C1      	MOVWF      ___DoICPAddr
0x0557	0x3005      	MOVLW      5
0x0558	0x00C2      	MOVWF      194
0x0559	0x22DC      	CALL       732
0x055A	0x0008      	RETURN
;Codigo.c,0 :: ?ICS?lstr6_Codigo
0x04D6	0x3420 ;?ICS?lstr6_Codigo+0
0x04D7	0x3420 ;?ICS?lstr6_Codigo+1
0x04D8	0x3420 ;?ICS?lstr6_Codigo+2
0x04D9	0x3420 ;?ICS?lstr6_Codigo+3
0x04DA	0x3420 ;?ICS?lstr6_Codigo+4
0x04DB	0x3420 ;?ICS?lstr6_Codigo+5
0x04DC	0x3420 ;?ICS?lstr6_Codigo+6
0x04DD	0x3420 ;?ICS?lstr6_Codigo+7
0x04DE	0x3420 ;?ICS?lstr6_Codigo+8
0x04DF	0x3420 ;?ICS?lstr6_Codigo+9
0x04E0	0x3420 ;?ICS?lstr6_Codigo+10
0x04E1	0x3420 ;?ICS?lstr6_Codigo+11
0x04E2	0x3420 ;?ICS?lstr6_Codigo+12
0x04E3	0x3420 ;?ICS?lstr6_Codigo+13
0x04E4	0x3420 ;?ICS?lstr6_Codigo+14
0x04E5	0x3420 ;?ICS?lstr6_Codigo+15
0x04E6	0x3400 ;?ICS?lstr6_Codigo+16
; end of ?ICS?lstr6_Codigo
;Codigo.c,0 :: ?ICS?lstr5_Codigo
0x04E7	0x3420 ;?ICS?lstr5_Codigo+0
0x04E8	0x3420 ;?ICS?lstr5_Codigo+1
0x04E9	0x3420 ;?ICS?lstr5_Codigo+2
0x04EA	0x3420 ;?ICS?lstr5_Codigo+3
0x04EB	0x3420 ;?ICS?lstr5_Codigo+4
0x04EC	0x3420 ;?ICS?lstr5_Codigo+5
0x04ED	0x3420 ;?ICS?lstr5_Codigo+6
0x04EE	0x3420 ;?ICS?lstr5_Codigo+7
0x04EF	0x3420 ;?ICS?lstr5_Codigo+8
0x04F0	0x3420 ;?ICS?lstr5_Codigo+9
0x04F1	0x3420 ;?ICS?lstr5_Codigo+10
0x04F2	0x3420 ;?ICS?lstr5_Codigo+11
0x04F3	0x3420 ;?ICS?lstr5_Codigo+12
0x04F4	0x3420 ;?ICS?lstr5_Codigo+13
0x04F5	0x3420 ;?ICS?lstr5_Codigo+14
0x04F6	0x3420 ;?ICS?lstr5_Codigo+15
0x04F7	0x3400 ;?ICS?lstr5_Codigo+16
; end of ?ICS?lstr5_Codigo
;Codigo.c,0 :: ?ICS?lstr7_Codigo
0x04F8	0x3420 ;?ICS?lstr7_Codigo+0
0x04F9	0x3420 ;?ICS?lstr7_Codigo+1
0x04FA	0x3420 ;?ICS?lstr7_Codigo+2
0x04FB	0x3420 ;?ICS?lstr7_Codigo+3
0x04FC	0x3420 ;?ICS?lstr7_Codigo+4
0x04FD	0x3420 ;?ICS?lstr7_Codigo+5
0x04FE	0x3420 ;?ICS?lstr7_Codigo+6
0x04FF	0x3420 ;?ICS?lstr7_Codigo+7
0x0500	0x3420 ;?ICS?lstr7_Codigo+8
0x0501	0x3420 ;?ICS?lstr7_Codigo+9
0x0502	0x3420 ;?ICS?lstr7_Codigo+10
0x0503	0x3420 ;?ICS?lstr7_Codigo+11
0x0504	0x3420 ;?ICS?lstr7_Codigo+12
0x0505	0x3420 ;?ICS?lstr7_Codigo+13
0x0506	0x3420 ;?ICS?lstr7_Codigo+14
0x0507	0x3420 ;?ICS?lstr7_Codigo+15
0x0508	0x3400 ;?ICS?lstr7_Codigo+16
; end of ?ICS?lstr7_Codigo
;Codigo.c,0 :: ?ICS_auxcont0
0x0509	0x3400 ;?ICS_auxcont0+0
; end of ?ICS_auxcont0
;Codigo.c,0 :: ?ICS?lstr4_Codigo
0x050A	0x3420 ;?ICS?lstr4_Codigo+0
0x050B	0x3420 ;?ICS?lstr4_Codigo+1
0x050C	0x3420 ;?ICS?lstr4_Codigo+2
0x050D	0x3420 ;?ICS?lstr4_Codigo+3
0x050E	0x3420 ;?ICS?lstr4_Codigo+4
0x050F	0x3420 ;?ICS?lstr4_Codigo+5
0x0510	0x3420 ;?ICS?lstr4_Codigo+6
0x0511	0x3420 ;?ICS?lstr4_Codigo+7
0x0512	0x3420 ;?ICS?lstr4_Codigo+8
0x0513	0x3420 ;?ICS?lstr4_Codigo+9
0x0514	0x3420 ;?ICS?lstr4_Codigo+10
0x0515	0x3420 ;?ICS?lstr4_Codigo+11
0x0516	0x3420 ;?ICS?lstr4_Codigo+12
0x0517	0x3420 ;?ICS?lstr4_Codigo+13
0x0518	0x3420 ;?ICS?lstr4_Codigo+14
0x0519	0x3420 ;?ICS?lstr4_Codigo+15
0x051A	0x3400 ;?ICS?lstr4_Codigo+16
; end of ?ICS?lstr4_Codigo
;Codigo.c,0 :: ?ICS_sel
0x051B	0x3401 ;?ICS_sel+0
; end of ?ICS_sel
;Codigo.c,0 :: ?ICS?lstr1_Codigo
0x051C	0x3444 ;?ICS?lstr1_Codigo+0
0x051D	0x3469 ;?ICS?lstr1_Codigo+1
0x051E	0x346D ;?ICS?lstr1_Codigo+2
0x051F	0x346D ;?ICS?lstr1_Codigo+3
0x0520	0x3465 ;?ICS?lstr1_Codigo+4
0x0521	0x3472 ;?ICS?lstr1_Codigo+5
0x0522	0x3400 ;?ICS?lstr1_Codigo+6
; end of ?ICS?lstr1_Codigo
;Codigo.c,0 :: ?ICS?lstr3_Codigo
0x0523	0x3420 ;?ICS?lstr3_Codigo+0
0x0524	0x3420 ;?ICS?lstr3_Codigo+1
0x0525	0x3420 ;?ICS?lstr3_Codigo+2
0x0526	0x3420 ;?ICS?lstr3_Codigo+3
0x0527	0x3420 ;?ICS?lstr3_Codigo+4
0x0528	0x3420 ;?ICS?lstr3_Codigo+5
0x0529	0x3420 ;?ICS?lstr3_Codigo+6
0x052A	0x3420 ;?ICS?lstr3_Codigo+7
0x052B	0x3420 ;?ICS?lstr3_Codigo+8
0x052C	0x3420 ;?ICS?lstr3_Codigo+9
0x052D	0x3420 ;?ICS?lstr3_Codigo+10
0x052E	0x3420 ;?ICS?lstr3_Codigo+11
0x052F	0x3420 ;?ICS?lstr3_Codigo+12
0x0530	0x3420 ;?ICS?lstr3_Codigo+13
0x0531	0x3420 ;?ICS?lstr3_Codigo+14
0x0532	0x3420 ;?ICS?lstr3_Codigo+15
0x0533	0x3400 ;?ICS?lstr3_Codigo+16
; end of ?ICS?lstr3_Codigo
;Codigo.c,0 :: ?ICS?lstr2_Codigo
0x0534	0x344D ;?ICS?lstr2_Codigo+0
0x0535	0x3469 ;?ICS?lstr2_Codigo+1
0x0536	0x3463 ;?ICS?lstr2_Codigo+2
0x0537	0x3472 ;?ICS?lstr2_Codigo+3
0x0538	0x346F ;?ICS?lstr2_Codigo+4
0x0539	0x3463 ;?ICS?lstr2_Codigo+5
0x053A	0x346F ;?ICS?lstr2_Codigo+6
0x053B	0x346E ;?ICS?lstr2_Codigo+7
0x053C	0x3474 ;?ICS?lstr2_Codigo+8
0x053D	0x3472 ;?ICS?lstr2_Codigo+9
0x053E	0x346F ;?ICS?lstr2_Codigo+10
0x053F	0x346C ;?ICS?lstr2_Codigo+11
0x0540	0x3461 ;?ICS?lstr2_Codigo+12
0x0541	0x3464 ;?ICS?lstr2_Codigo+13
0x0542	0x346F ;?ICS?lstr2_Codigo+14
0x0543	0x3400 ;?ICS?lstr2_Codigo+15
; end of ?ICS?lstr2_Codigo
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [66]    _interrupt
0x0046       [6]    _Delay_1us
0x004C      [13]    _Delay_5500us
0x0059       [7]    _Delay_50us
0x0060      [87]    _Lcd_Cmd
0x00B7      [56]    _Lcd_Chr
0x00EF       [7]    _____DoICP
0x00F6       [9]    _Lcd_Chr_CP
0x00FF      [71]    _sinc
0x0146      [71]    _controlight
0x018D      [75]    _timer
0x01D8      [71]    _fade
0x021F      [67]    _Lcd_Out
0x0262      [47]    _testabotoes
0x0291      [75]    _flash
0x02DC      [12]    ___CC2DW
0x02E8      [41]    _registradores
0x0311      [78]    _Lcd_Init
0x035F     [369]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0003       [0]    NOT_PD_bit
0x0003       [0]    C_bit
0x0003       [0]    DC_bit
0x0003       [0]    Z_bit
0x0003       [0]    IRP_bit
0x0003       [0]    RP1_bit
0x0003       [0]    RP0_bit
0x0003       [0]    NOT_TO_bit
0x0004       [1]    FSRPTR
0x0004       [1]    FSR
0x0005       [0]    RA0_bit
0x0005       [0]    RA1_bit
0x0005       [0]    RA4_bit
0x0005       [1]    PORTA
0x0005       [0]    RA2_bit
0x0005       [0]    RA5_bit
0x0005       [0]    RA3_bit
0x0006       [0]    RB1_bit
0x0006       [0]    RB0_bit
0x0006       [0]    RB2_bit
0x0006       [0]    RB3_bit
0x0006       [0]    RB4_bit
0x0006       [0]    RB6_bit
0x0006       [0]    RB5_bit
0x0006       [1]    PORTB
0x0006       [0]    RB7_bit
0x0007       [0]    LCD_D5
0x0007       [0]    LCD_D6
0x0007       [0]    LCD_D4
0x0007       [0]    LCD_RS
0x0007       [1]    PORTC
0x0007       [0]    LCD_D7
0x0007       [0]    LCD_EN
0x0007       [0]    RC1_bit
0x0007       [0]    RC2_bit
0x0007       [0]    RC6_bit
0x0007       [0]    RC5_bit
0x0007       [0]    RC0_bit
0x0007       [0]    RC4_bit
0x0007       [0]    RC3_bit
0x0007       [0]    RC7_bit
0x000A       [1]    PCLATH
0x000B       [0]    TMR0IE_bit
0x000B       [0]    T0IE_bit
0x000B       [0]    RBIF_bit
0x000B       [0]    GIE_bit
0x000B       [0]    RBIE_bit
0x000B       [0]    PEIE_bit
0x000B       [0]    T0IF_bit
0x000B       [0]    INTF_bit
0x000B       [0]    INTE_bit
0x000B       [0]    TMR0IF_bit
0x000B       [1]    INTCON
0x000C       [0]    RCIF_bit
0x000C       [0]    TMR2IF_bit
0x000C       [0]    TMR1IF_bit
0x000C       [1]    PIR1
0x000C       [0]    ADIF_bit
0x000C       [0]    TXIF_bit
0x000C       [0]    SSPIF_bit
0x000C       [0]    CCP1IF_bit
0x000D       [0]    CMIF_bit
0x000D       [0]    BCLIF_bit
0x000D       [0]    CCP2IF_bit
0x000D       [1]    PIR2
0x000D       [0]    EEIF_bit
0x000E       [1]    TMR1L
0x000F       [1]    TMR1H
0x0010       [0]    T1INSYNC_bit
0x0010       [0]    NOT_T1SYNC_bit
0x0010       [0]    TMR1CS_bit
0x0010       [0]    T1SYNC_bit
0x0010       [0]    T1CKPS1_bit
0x0010       [1]    T1CON
0x0010       [0]    T1OSCEN_bit
0x0010       [0]    T1CKPS0_bit
0x0010       [0]    TMR1ON_bit
0x0011       [1]    TMR2
0x0012       [0]    TOUTPS0_bit
0x0012       [0]    TOUTPS1_bit
0x0012       [0]    T2CKPS1_bit
0x0012       [0]    TOUTPS2_bit
0x0012       [0]    TOUTPS3_bit
0x0012       [0]    TMR2ON_bit
0x0012       [0]    T2CKPS0_bit
0x0012       [1]    T2CON
0x0013       [1]    SSPBUF
0x0014       [1]    SSPCON
0x0014       [0]    SSPM0_bit
0x0014       [0]    SSPEN_bit
0x0014       [0]    CKP_bit
0x0014       [0]    SSPOV_bit
0x0014       [0]    SSPM3_bit
0x0014       [0]    SSPM2_bit
0x0014       [0]    SSPM1_bit
0x0014       [0]    WCOL_bit
0x0015       [1]    CCPR1L
0x0015       [2]    CCPR1
0x0016       [1]    CCPR1H
0x0017       [0]    CCP1M0_bit
0x0017       [1]    CCP1CON
0x0017       [0]    CCP1Y_bit
0x0017       [0]    CCP1X_bit
0x0017       [0]    CCP1M3_bit
0x0017       [0]    CCP1M1_bit
0x0017       [0]    CCP1M2_bit
0x0018       [0]    FERR_bit
0x0018       [0]    ADDEN_bit
0x0018       [0]    RCD8_bit
0x0018       [0]    RX9D_bit
0x0018       [0]    OERR_bit
0x0018       [0]    CREN_bit
0x0018       [1]    RCSTA
0x0018       [0]    RX9_bit
0x0018       [0]    SPEN_bit
0x0018       [0]    RC9_bit
0x0018       [0]    SREN_bit
0x0018       [0]    RC8_9_bit
0x0018       [0]    NOT_RC8_bit
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x001B       [2]    CCPR2
0x001B       [1]    CCPR2L
0x001C       [1]    CCPR2H
0x001D       [0]    CCP2M1_bit
0x001D       [0]    CCP2X_bit
0x001D       [1]    CCP2CON
0x001D       [0]    CCP2M0_bit
0x001D       [0]    CCP2M3_bit
0x001D       [0]    CCP2M2_bit
0x001D       [0]    CCP2Y_bit
0x001E       [1]    ADRESH
0x001F       [0]    ADCS0_bit
0x001F       [1]    ADCON0
0x001F       [0]    CHS1_bit
0x001F       [0]    CHS0_bit
0x001F       [0]    CHS2_bit
0x001F       [0]    GO_bit
0x001F       [0]    ADON_bit
0x001F       [0]    GO_DONE_bit
0x001F       [0]    NOT_DONE_bit
0x001F       [0]    ADCS1_bit
0x0022      [17]    ?lstr6_Codigo
0x0033      [17]    ?lstr5_Codigo
0x0044      [17]    ?lstr7_Codigo
0x0055       [1]    _auxcont0
0x0056      [17]    ?lstr4_Codigo
0x0067       [1]    _sel
0x0068       [7]    ?lstr1_Codigo
0x006F       [0]    __Lib_Lcd_cmd_status
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [0]    PS0_bit
0x0081       [0]    T0SE_bit
0x0081       [0]    PSA_bit
0x0081       [0]    PS2_bit
0x0081       [0]    T0CS_bit
0x0081       [1]    OPTION_REG
0x0081       [0]    NOT_RBPU_bit
0x0081       [0]    INTEDG_bit
0x0081       [0]    PS1_bit
0x0085       [0]    TRISA1_bit
0x0085       [0]    TRISA4_bit
0x0085       [0]    TRISA2_bit
0x0085       [0]    TRISA0_bit
0x0085       [0]    TRISA5_bit
0x0085       [1]    TRISA
0x0085       [0]    TRISA3_bit
0x0086       [0]    TRISB3_bit
0x0086       [0]    TRISB7_bit
0x0086       [1]    TRISB
0x0086       [0]    TRISB5_bit
0x0086       [0]    TRISB1_bit
0x0086       [0]    TRISB4_bit
0x0086       [0]    TRISB6_bit
0x0086       [0]    TRISB0_bit
0x0086       [0]    TRISB2_bit
0x0087       [0]    TRISC5_bit
0x0087       [1]    TRISC
0x0087       [0]    TRISC4_bit
0x0087       [0]    TRISC3_bit
0x0087       [0]    LCD_RS_Direction
0x0087       [0]    LCD_D6_Direction
0x0087       [0]    LCD_EN_Direction
0x0087       [0]    TRISC1_bit
0x0087       [0]    LCD_D7_Direction
0x0087       [0]    TRISC7_bit
0x0087       [0]    TRISC2_bit
0x0087       [0]    LCD_D4_Direction
0x0087       [0]    TRISC6_bit
0x0087       [0]    TRISC0_bit
0x0087       [0]    LCD_D5_Direction
0x008C       [0]    TXIE_bit
0x008C       [0]    TMR2IE_bit
0x008C       [0]    SSPIE_bit
0x008C       [0]    CCP1IE_bit
0x008C       [0]    ADIE_bit
0x008C       [1]    PIE1
0x008C       [0]    TMR1IE_bit
0x008C       [0]    RCIE_bit
0x008D       [0]    BCLIE_bit
0x008D       [0]    EEIE_bit
0x008D       [0]    CMIE_bit
0x008D       [1]    PIE2
0x008D       [0]    CCP2IE_bit
0x008E       [1]    PCON
0x008E       [0]    NOT_BOR_bit
0x008E       [0]    NOT_BO_bit
0x008E       [0]    NOT_POR_bit
0x0091       [0]    RSEN_bit
0x0091       [0]    PEN_bit
0x0091       [1]    SSPCON2
0x0091       [0]    SEN_bit
0x0091       [0]    RCEN_bit
0x0091       [0]    ACKSTAT_bit
0x0091       [0]    GCEN_bit
0x0091       [0]    ACKEN_bit
0x0091       [0]    ACKDT_bit
0x0092       [1]    PR2
0x0093       [1]    SSPADD
0x0094       [0]    I2C_READ_bit
0x0094       [0]    I2C_START__bit
0x0094       [0]    R_bit
0x0094       [0]    UA_bit
0x0094       [0]    R_W_bit
0x0094       [0]    READ_WRITE_bit
0x0094       [0]    BF_bit
0x0094       [0]    NOT_W_bit
0x0094       [0]    NOT_WRITE_bit
0x0094       [1]    SSPSTAT
0x0094       [0]    I2C_DATA_bit
0x0094       [0]    NOT_A_bit
0x0094       [0]    D_bit
0x0094       [0]    SMP_bit
0x0094       [0]    CKE_bit
0x0094       [0]    NOT_ADDRESS_bit
0x0094       [0]    P_bit
0x0094       [0]    I2C_STOP__bit
0x0094       [0]    S_bit
0x0094       [0]    D_A_bit
0x0094       [0]    DATA_ADDRESS_bit
0x0098       [0]    TXEN_bit
0x0098       [0]    TX8_9_bit
0x0098       [0]    TX9D_bit
0x0098       [0]    TXD8_bit
0x0098       [1]    TXSTA
0x0098       [0]    SYNC_bit
0x0098       [0]    BRGH_bit
0x0098       [0]    TRMT_bit
0x0098       [0]    NOT_TX8_bit
0x0098       [0]    TX9_bit
0x0098       [0]    CSRC_bit
0x0099       [1]    SPBRG
0x009C       [0]    C1INV_bit
0x009C       [1]    CMCON
0x009C       [0]    C2OUT_bit
0x009C       [0]    C1OUT_bit
0x009C       [0]    C2INV_bit
0x009C       [0]    CM1_bit
0x009C       [0]    CM0_bit
0x009C       [0]    CM2_bit
0x009C       [0]    CIS_bit
0x009D       [0]    CVRR_bit
0x009D       [0]    CVR3_bit
0x009D       [0]    CVREN_bit
0x009D       [0]    CVROE_bit
0x009D       [0]    CVR0_bit
0x009D       [1]    CVRCON
0x009D       [0]    CVR2_bit
0x009D       [0]    CVR1_bit
0x009E       [1]    ADRESL
0x009F       [0]    PCFG1_bit
0x009F       [1]    ADCON1
0x009F       [0]    PCFG0_bit
0x009F       [0]    ADCS2_bit
0x009F       [0]    ADFM_bit
0x009F       [0]    PCFG2_bit
0x009F       [0]    PCFG3_bit
0x00A0      [17]    ?lstr3_Codigo
0x00B1      [16]    ?lstr2_Codigo
0x00C1       [2]    ___DoICPAddr
0x00C3       [1]    _flagsA
0x00C4       [1]    ___savePCLATH
0x00C5       [1]    ___saveSTATUS
0x00C6       [1]    FARG_Lcd_Out_row
0x00C7       [1]    FARG_Lcd_Out_column
0x00C8       [1]    FARG_Lcd_Out_text
0x00C9       [1]    Lcd_Out_i_L0
0x00CA       [1]    FARG_Lcd_Chr_row
0x00CA       [1]    FARG_Lcd_Chr_CP_out_char
0x00CB       [1]    FARG_Lcd_Chr_column
0x00CC       [1]    FARG_Lcd_Chr_out_char
0x00CD       [1]    FARG_Lcd_Cmd_out_char
0x010C       [1]    EEDATA
0x010D       [1]    EEADR
0x010E       [1]    EEDATH
0x010F       [1]    EEADRH
0x018C       [1]    EECON1
0x018C       [0]    EEPGD_bit
0x018C       [0]    RD_bit
0x018C       [0]    WR_bit
0x018C       [0]    WREN_bit
0x018C       [0]    WRERR_bit
0x018D       [1]    EECON2
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x04D6      [17]    ?ICS?lstr6_Codigo
0x04E7      [17]    ?ICS?lstr5_Codigo
0x04F8      [17]    ?ICS?lstr7_Codigo
0x0509       [1]    ?ICS_auxcont0
0x050A      [17]    ?ICS?lstr4_Codigo
0x051B       [1]    ?ICS_sel
0x051C       [7]    ?ICS?lstr1_Codigo
0x0523      [17]    ?ICS?lstr3_Codigo
0x0534      [16]    ?ICS?lstr2_Codigo
//** Label List: ** 
//----------------------------------------------
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_interrupt4
  L_interrupt5
  L_interrupt6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_main18
  L_main19
  L_main20
  L_main21
  L_testabotoes22
  L_testabotoes23
  L_testabotoes24
  L_testabotoes25
  L_testabotoes26
  L_testabotoes27
  L_testabotoes28
  L_testabotoes29
  L_testabotoes30
  L_testabotoes31
  L_controlight32
  L_controlight33
  L_controlight34
  L_controlight35
  L_fade36
  L_fade37
  L_fade38
  L_fade39
  L_flash40
  L_flash41
  L_flash42
  L_flash43
  L_timer44
  L_timer45
  L_timer46
  L_timer47
  L_sinc48
  L_sinc49
  L_sinc50
  L_sinc51
  L__testabotoes52
  L__testabotoes53
  L__controlight54
  L__fade55
  L__flash56
  L__timer57
  L__sinc58
  _interrupt
  L__interrupt59
  _main
  _registradores
  _testabotoes
  _controlight
  _fade
  _flash
  _timer
  _sinc
  L_Delay_10us0
  L_Delay_22us1
  L_Delay_50us2
  L_Delay_80us3
  L_Delay_500us4
  L_Delay_5500us5
  L_Delay_1ms6
  L_Delay_5ms7
  L_Delay_8ms8
  L_Delay_100ms9
  L_Delay_1sec10
  L_boot16_Delay_5ms11
  L_Delay_Cyc12
  L_Delay_Cyc13
  L_VDelay_ms14
  L_VDelay_ms15
  L_VDelay_ms16
  L_VDelay_Advanced_ms17
  L_VDelay_Advanced_ms18
  L_VDelay_Advanced_ms19
  _Get_Fosc_kHz
  _Delay_1us
  _Delay_10us
  _Delay_22us
  _Delay_50us
  _Delay_80us
  _Delay_500us
  _Delay_5500us
  _Delay_1ms
  _Delay_5ms
  _Delay_8ms
  _Delay_100ms
  _Delay_1sec
  _boot16_Delay_5ms
  _Delay_Cyc
  _VDelay_ms
  L__VDelay_ms20
  L__VDelay_ms21
  L__VDelay_ms22
  _VDelay_Advanced_ms
  L__VDelay_Advanced_ms23
  L__VDelay_Advanced_ms24
  L__VDelay_Advanced_ms25
  L_Lcd_Cmd0
  L_Lcd_Cmd1
  L_Lcd_Out_CP2
  L_Lcd_Out_CP3
  L_Lcd_Chr4
  L_Lcd_Chr5
  L_Lcd_Chr6
  L_Lcd_Chr7
  L_Lcd_Chr8
  L_Lcd_Chr9
  L_Lcd_Chr10
  L_Lcd_Out11
  L_Lcd_Out12
  L_Lcd_Out13
  L_Lcd_Out14
  L_Lcd_Out15
  L_Lcd_Out16
  L_Lcd_Out17
  L_Lcd_Out18
  L_Lcd_Out19
  _Lcd_Cmd
  L__Lcd_Cmd20
  L__Lcd_Cmd21
  L__Lcd_Cmd22
  L__Lcd_Cmd23
  L__Lcd_Cmd24
  L__Lcd_Cmd25
  L__Lcd_Cmd26
  L__Lcd_Cmd27
  L__Lcd_Cmd28
  L__Lcd_Cmd29
  L__Lcd_Cmd30
  L__Lcd_Cmd31
  L__Lcd_Cmd32
  L__Lcd_Cmd33
  L__Lcd_Cmd34
  L__Lcd_Cmd35
  L__Lcd_Cmd36
  L__Lcd_Cmd37
  L__Lcd_Cmd38
  L__Lcd_Cmd39
  _Lcd_Chr_CP
  _Lcd_Out_CP
  _Lcd_Chr
  _Lcd_Init
  _Lcd_Out
  _CC2D_Loop1
  _____DoICP
  _____DoIFC
  ___CC2DW
  _Swap
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_interrupt4
  L_interrupt5
  L_interrupt6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_main18
  L_main19
  L_main20
  L_main21
  L_testabotoes22
  L_testabotoes23
  L_testabotoes24
  L_testabotoes25
  L_testabotoes26
  L_testabotoes27
  L_testabotoes28
  L_testabotoes29
  L_testabotoes30
  L_testabotoes31
  L_controlight32
  L_controlight33
  L_controlight34
  L_controlight35
  L_fade36
  L_fade37
  L_fade38
  L_fade39
  L_flash40
  L_flash41
  L_flash42
  L_flash43
  L_timer44
  L_timer45
  L_timer46
  L_timer47
  L_sinc48
  L_sinc49
  L_sinc50
  L_sinc51
  L__testabotoes52
  L__testabotoes53
  L__controlight54
  L__fade55
  L__flash56
  L__timer57
  L__sinc58
  _interrupt
  L__interrupt59
  _main
  _registradores
  _testabotoes
  _controlight
  _fade
  _flash
  _timer
  _sinc
